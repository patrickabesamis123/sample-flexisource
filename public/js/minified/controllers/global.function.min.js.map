{"version":3,"sources":["global.function.js"],"names":[],"mappingsfile":"global.function.min.js","sourcesContent":["(function() {\r\n\t'use strict';\r\n\t//var base_url = $('body').data('base_url');\r\n\tvar app = angular.module('app');\r\n\tvar base_url = $('body').attr('data-base_url');\r\n\r\n  app.factory('pageCookie', ['GlobalConstant','$cookies', '$http', '$interval', '$timeout', '$window', 'ajaxService',\r\n\t\tfunction(GlobalConstant, $cookies, $http, $interval, $timeout, $window, ajaxService) {\r\n\t\treturn {\r\n\t\t\tInitCookie: function ($scope) {\r\n\t\t\t\tvar cookiepage = $cookies.getObject('allmodules');\r\n\t\t\t\tvar allmodules = [];\r\n\r\n\t\t\t\tif (cookiepage) {\r\n\t\t\t\t\tallmodules = cookiepage;\r\n\t\t\t\t} else {\r\n\t  \t\t\tallmodules = [{\r\n\t  \t\t\t\tlogin: {},\r\n\t\t\t\t    registration: {},\r\n\t\t\t\t    job_search: {},\r\n\t\t\t\t    job_view: {},\r\n\t\t\t\t    dashboard:{},\r\n\t\t\t\t    tms: {\r\n\t\t\t\t    \tjobid: 0,\r\n\t\t\t\t      loadmore: {\r\n\t\t\t\t      \tstatus: false,\r\n\t\t\t\t      \toffset: 0,\r\n\t\t\t\t      \tstep_id: 0\r\n\t\t\t\t      },\r\n\t\t\t        expanded_card: {\r\n\t\t\t        \tstatus: false,\r\n\t\t\t          step_id: 0,\r\n\t\t\t          object_id: 0,\r\n\t\t\t          print_opt: false,\r\n\t\t\t          applicant_data: {},\r\n\t\t\t          see_notes: \"\"\r\n\t\t\t        }\r\n\t\t\t\t    }\r\n\t\t\t\t\t}];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$cookies.putObject('allmodules', allmodules);\r\n\t\t\t\treturn allmodules[0];\r\n\t  \t},\r\n\t  \tUpdateCookie: function ($scope) {\r\n\t  \t\tconsole.log('update cookie ', $scope);\r\n\t  \t\tvar updateCookie = [$scope];\r\n\r\n\t  \t\t$cookies.putObject('allmodules', updateCookie);\r\n\t  \t\treturn true;\r\n\t  \t}\r\n\t\t} // end return\r\n\t}]);\r\n\r\n\tapp.config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(false);\r\n\t}]);\r\n\r\n  app.factory('GlobalSearch', function() {\r\n  \tvar data = {\r\n      SearchValue: ''\r\n    };\r\n    return {\r\n      getSearchVal: function () {\r\n        return data.SearchValue;\r\n      },\r\n      setSearchVal: function (val) {\r\n        data.SearchValue = val;\r\n      }\r\n    };\r\n  });\r\n\r\n\tapp.controller('globalFunction', ['GlobalConstant',  '$scope','$window','$http','$cookies','$filter','$timeout' , 'OAuth',  'OAuthToken', '$rootScope',\r\n\tfunction(GlobalConstant,  $scope , $window , $http , $cookies , $filter , $timeout, OAuth, OAuthToken, $rootScope) {\r\n\t\t// console.log(GlobalConstant);\r\n\t\t//Cookie Checker\r\n\r\n\r\n\r\n\t\tvar getToken = $cookies.get('token');\r\n\t\tvar getTokenId = $cookies.get('token_id');\r\n\t\tvar timeOffset = 2000;\r\n\r\n\t\tif (typeof getToken != 'undefined' || getToken != null) {\r\n\t\t\tvar GetLoginTime =  parseInt ($cookies.get('LoginTime'));\r\n\t\t\tvar GetExpireTime = parseInt ($cookies.get('exp'));\r\n\t\t\tvar currentTime = new Date();\r\n\t\t\tvar currentTimeTimestamp = Math.round(currentTime.getTime() / 1000);\r\n\t\t\t//Vars to display DATA, NOT IMPORTANT\r\n\t\t\tvar ExpireTimeInt = parseInt (GetLoginTime + GetExpireTime);\r\n\t\t\tvar RefreshTimeInt = parseInt (GetLoginTime  + (GetExpireTime - timeOffset));\r\n\t\t\t// var RefreshTimeInt\t\t = parseInt (GetLoginTime  + (GetExpireTime - 3570));\r\n\t\t\tvar expiredate = new Date(ExpireTimeInt * 1000);\r\n\t\t\tvar refreshDate = new Date(RefreshTimeInt * 1000);\r\n\t\t\tvar flag = true;\r\n\t\t\t// var video_counter = 0;\r\n\t\t\t//$scope.ExpireDate = $filter('date')(expiredate, 'yyyy-MM-dd HH:mm:ss');\r\n\t\t\t//$scope.RefreshTime = $filter('date')(refreshDate, 'yyyy-MM-dd HH:mm:ss');\r\n\t\t\t$scope.ExpireDate = $filter('date')(expiredate, 'yyyy-MM-dd HH:mm:ss');\r\n\t\t\t$scope.RefreshTime = $filter('date')(refreshDate, 'yyyy-MM-dd HH:mm:ss');\r\n\t\t\t$scope.Token = $cookies.get('token');\r\n\t\t\t$scope.RefreshOn = currentTimeTimestamp;\r\n\t\t\tvar i = 0;\r\n\t\t\tvar logoutIdleCount = 0;\r\n\r\n\t\t\tvar stimatedExpiredTime = (2700 + (3600 * 2)); // 1 hr estimate + 2hours  (including payload delay and other stuff)\r\n\t\t\t$scope.onTimeout = function() {\r\n        $scope.RefreshOn++;\r\n        mytimeout = $timeout($scope.onTimeout,1000);\r\n        //console.log($cookies.get('LoginTime'))\r\n        //console.log(RefreshTimeInt - $scope.RefreshOn)\r\n        //console.log(GetLoginTime)\r\n        //console.log('100 -> ' + i)\r\n        //console.log(OAuthToken.getRefreshToken())\r\n        // Forced logout if idle in 1 hour\r\n        if(logoutIdleCount > stimatedExpiredTime) {\r\n        \t$.ajax({\r\n\t    \t\t\turl  : GlobalConstant.logoutPage,\r\n\t    \t\t\ttype : 'get',\r\n\t    \t\t\t'success' : function(data) {\r\n\t    \t\t\t\tif(data == 200) {\r\n\t    \t\t\t\t\t$window.location.href =  GlobalConstant.loginPage;\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n  \t\t\t\t});\r\n        }\r\n        // console.log('logoutIdleCount')\r\n        //console.log(logoutIdleCount +'/'+ stimatedExpiredTime)\r\n        logoutIdleCount++;\r\n\r\n        if (angular.element($('#pmvCameraModalNew')).is(':visible')) {\r\n        \tlogoutIdleCount = 0;\r\n        }\r\n\r\n        if(i > 99) {\r\n        \t// RefreshTimeInt =  parseInt ($cookies.get('LoginTime'));\r\n        \tcurrentTime = new Date();\r\n\t\t\t\t\t$scope.RefreshOn = Math.round(currentTime.getTime() / 1000);\r\n\t\t\t\t\t// GetExpireTime =  parseInt($cookies.get('exp'));\r\n\r\n\t\t\t\t\t// RefreshTimeInt = parseInt(parseInt($cookies.get('LoginTime')) + (GetExpireTime - timeOffset));\r\n        \ti = 0;\r\n        \t// //console.log('redifined ==========================================')\r\n        }\r\n        i++;\r\n\r\n      \tif(flag) {\r\n        \tif ($scope.RefreshOn >= RefreshTimeInt) {\r\n\t        \t//refreshToken\r\n\t    \t\t\t//Try new refresher\r\n\t\t\t\t\t\tOAuth.getRefreshToken();\r\n\t\t\t\t\t\t// //console.log('isAuthenticated')\r\n\t\t\t\t\t\t// //console.log(OAuth.isAuthenticated())\r\n\t\t\t\t\t\tvar RefresherData =  OAuthToken.getToken();\r\n\t\t\t\t\t\t// //console.log(RefresherData)\r\n\t    \t\t\tif(OAuth.isAuthenticated()) {\r\n\t    \t\t\t\t// flag = false;\r\n\t    \t\t\t\ti = 0;\r\n\t    \t\t\t\tvar token\t= RefresherData.access_token;\r\n\t\t\t\t    \tvar expire = parseInt(RefresherData.expires_in);\r\n\t\t\t\t    \tvar refresh_token\t= RefresherData.refresh_token;\r\n\t\t\t\t    \tvar email = $cookies.get('email');\r\n\t\t\t\t\t\t\tvar SetDateforLogin = new Date();\r\n\t\t    \t\t\tvar LoginTime = parseInt(SetDateforLogin.getTime() / 1000);\r\n\t\t    \t\t\tvar ExpireTime = parseInt(SetDateforLogin.getTime() / 1000) + expire;\r\n\t\t    \t\t\tvar ExpireTimetoDate = new Date(ExpireTime * 1000);\r\n\t\t    \t\t\t////console.log(ExpireTimetoDate);\r\n\t\t    \t\t\t$cookies.put('token', token, { 'path':'/'});\r\n\t\t    \t\t\t$cookies.put('LoginTime',LoginTime, {'path':'/' });\r\n\t\t    \t\t\t// $cookies.put('IdleTime', ExpireTime, {'path':'/' });\r\n\t\t    \t\t\t$cookies.put('exp', expire, {'path':'/' });\r\n\t\t    \t\t\t$cookies.put('email', email, {'path':'/' });\r\n\t\t    \t\t\tRefreshTimeInt = LoginTime + (expire - timeOffset);\r\n\t\t    \t\t\t// GetLoginTime = LoginTime;\r\n\t\t    \t\t\t// RefreshTimeInt = LoginTime + (expire - 3570);\r\n\t\t    \t\t\t$.ajax({\r\n\t\t\t    \t\t\turl  : GlobalConstant.tokenstorage,\r\n\t\t\t    \t\t\ttype : 'post',\r\n\t\t\t    \t\t\tdata : {token_refresh: refresh_token, token_access: token, username: email},\r\n\t\t\t    \t\t\tsuccess : function(token_id) {\r\n\t\t\t    \t\t\t\t$cookies.put('token_id', token_id, {'path':'/' });\r\n\t\t\t    \t\t\t}\r\n\t\t\t    \t\t});\r\n\t    \t\t\t}\r\n\t    \t\t\t/*$.ajax({ //Get refresher data\r\n\t\t    \t\t\turl  : GlobalConstant.refreshtoken,\r\n\t\t    \t\t\ttype : 'get',\r\n\t\t    \t\t\t'async' : false,\r\n\t\t    \t\t\t'dataType' : 'json',\r\n\t\t    \t\t\t'success' : function(data) {\r\n\t\t    \t\t\t\t flag = false;\r\n\r\n\t\t    \t\t\t\t//Fire refresher to api\r\n\t\t\t\t\t\t    var FormData = \"client_id=\"+data.cid+\"&client_secret=\"+data.cse+\"&grant_type=\"+data.grantType+\"&refresh_token=\"+data.refreshToken;\r\n\t\t\t\t\t\t    ////console.log(data)\r\n\t\t\t\t\t\t    $.get(data.apiUrl, FormData).done(function(response) {\r\n\r\n\t\t\t\t\t\t\t\tvar token  \t\t \t= response.access_token;\r\n\t\t\t\t\t\t    \tvar expire \t\t \t= parseInt(response.expires_in);\r\n\t\t\t\t\t\t    \tvar refresh_token\t= response.refresh_token;\r\n\t\t\t\t\t\t    \tvar email \t\t\t= $cookies.get('email');\r\n\r\n\t\t\t\t\t\t\t\tvar SetDateforLogin = new Date();\r\n\t\t\t\t    \t\t\tvar LoginTime = parseInt(SetDateforLogin.getTime() / 1000);\r\n\t\t\t\t    \t\t\tvar ExpireTime  \t = parseInt(SetDateforLogin.getTime() / 1000) + expire  ;\r\n\t\t\t\t    \t\t\tvar ExpireTimetoDate = new Date(ExpireTime * 1000);\r\n\r\n\t\t\t\t    \t\t\t////console.log(ExpireTimetoDate);\r\n\t\t\t\t    \t\t\t$cookies.put('token', token, { 'path':'/'});\r\n\t\t\t\t    \t\t\t$cookies.put('LoginTime',LoginTime, {'path':'/' });\r\n\t\t\t\t    \t\t\t// $cookies.put('IdleTime', ExpireTime, {'path':'/' });\r\n\t\t\t\t    \t\t\t$cookies.put('exp', expire, {'path':'/' });\r\n\t\t\t\t    \t\t\t$cookies.put('email', email, {'path':'/' });\r\n\r\n\r\n\t\t\t\t    \t\t\t$.ajax({\r\n\t\t\t\t\t    \t\t\turl  : GlobalConstant.tokenstorage,\r\n\t\t\t\t\t    \t\t\ttype : 'post',\r\n\t\t\t\t\t    \t\t\tdata : {token_refresh: refresh_token, token_access: token, username: email},\r\n\t\t\t\t\t    \t\t\tsuccess : function(token_id) {\r\n\t\t\t\t\t    \t\t\t\t$cookies.put('token_id', token_id, {'path':'/' });\r\n\r\n\t\t\t\t\t    \t\t\t}\r\n\t\t\t\t\t    \t\t});\r\n\r\n\r\n\t\t\t\t\t\t\t\t//flag = true;\r\n\r\n    \t\t\t\t\t\t});\r\n\r\n\t\t    \t\t\t}\r\n    \t\t\t\t}); */\r\n\t\t    \t}\r\n\t    \t}\r\n\t    \t//Check if date was changed to past vs Login Time\r\n\t    \t//console.log($scope.RefreshOn +'-'+ GetLoginTime)\r\n\t    \tif($scope.RefreshOn < GetLoginTime) {\r\n\t    \t\t//OAuth.getRefreshToken();\r\n\t    \t\t// logout user\r\n    \t\t\t$.ajax({\r\n\t    \t\t\turl  : GlobalConstant.logoutPage,\r\n\t    \t\t\ttype : 'get',\r\n\t    \t\t\t'success' : function(data) {\r\n\t    \t\t\t\tif(data == 200) {\r\n\t    \t\t\t\t\t//$window.location.href =  GlobalConstant.loginPage;\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n  \t\t\t\t});\r\n\t    \t}\r\n\t\t  };\r\n\t\t  var mytimeout = $timeout($scope.onTimeout, 1000);\r\n\r\n\t\t} else {\r\n\t\t\tvar current_location = $window.location.href;\r\n\t\t\tif(current_location.indexOf(\"my-account\") != -1) {\r\n\t\t\t\t$.ajax({\r\n    \t\t\turl  : GlobalConstant.logoutPage,\r\n    \t\t\ttype : 'get',\r\n    \t\t\t'success' : function(data) {\r\n    \t\t\t\tif(data == 200) {\r\n    \t\t\t\t\t$window.location.href =  GlobalConstant.loginPage;\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Check if Cookie is enabled\r\n\t\tfunction cookie () {\r\n      var cookieEnable = navigator.cookieEnabled;\r\n      if (typeof navigator.cookieEnabled === 'undefined' && !cookieEnable) {\r\n        document.cookie = 'cookie-test';\r\n        cookieEnable   = (document.cookie.indexOf('cookie-test') !== -1);\r\n      }\r\n      return cookieEnable;\r\n    }\r\n    if (!cookie()) {\r\n    \tif (!noCookiePage) {\r\n    \t\t$window.location.href =  GlobalConstant.loginPage;\r\n    \t}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\t}]);\r\n\r\n\t// /**** END GLOBAL Controller  ***********************************/\r\n\r\n// /**** 5. BEGIN MENU  ***********************************/\r\n\tapp.controller('LoginmenuController', ['GlobalConstant', 'GlobalSearch', 'ajaxService', '$scope', '$window', '$cookies', '$location', '$interval', '$http',\r\n\t\tfunction(GlobalConstant,GlobalSearch, ajaxService, $scope, $window,$cookies,$location, $interval, $http) {\r\n\t\t//Show User Navigation in menu\r\n\t\tvar tokenKey = $cookies.get('token');\r\n\t\tvar tokenExp = $cookies.get('expireToken');\r\n\t\t$scope.params = {access_token: tokenKey};\r\n\t\t$scope.isDashboard = false;\r\n\t\t$scope.isMyAccount = false;\r\n\t\t$scope.isMessages = false;\r\n\t\tvar currentLocation = String(window.location);\r\n\r\n\t\t// hide/show top menu link\r\n\t\tif(currentLocation.search('/my-account/dashboard') != -1 || currentLocation.search('/employer/dashboard') != -1) {\r\n\t\t\t$scope.isDashboard = true;\r\n\t\t} else if(currentLocation.search('/my-account/messages') != -1 || currentLocation.search('/employer/messages') != -1) {\r\n\t\t\t$scope.isMessages = true;\r\n\t\t} else if(currentLocation.search('/my-account')) {\r\n\t\t\t$scope.isMyAccount = true;\r\n\t\t}\r\n\r\n\t\t$scope.val = 0; //Default value binded on menu function\r\n\t\t$scope.logged = function(value) {\r\n\t\t\tif (tokenKey != null) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(tokenKey) {\r\n\t\t\tif ($cookies.get('ut') == 'candidate') {\r\n\t\t\t\t$http.get(GlobalConstant.profileApi)\r\n\t\t\t\t.then(function(response) {\r\n\t\t\t\t\tvar data = response.data.data;\r\n          var randomColor = 0;\r\n          var randomColorval = 0;\r\n\t\t\t\t\t// //console.log('data')\r\n\t\t\t\t\t// //console.log(data)\r\n\t\t\t\t\t$scope.docs = data.docs;\r\n\t\t\t\t\t$scope.profile_url = 'my-profile';\r\n          // Add initial to be used in default image\r\n          $scope.F_initial = data.first_name;\r\n          $scope.F_initial = $scope.F_initial.substr(0, 1);\r\n\r\n          $scope.L_initial = data.last_name;\r\n          $scope.L_initial = $scope.L_initial.substr(0, 1);\r\n\r\n          $scope.initial = $scope.F_initial + $scope.L_initial;\r\n\r\n          // change default photo's background color\r\n          if(randomColorval == 0) {\r\n            randomColor =Math.random();\r\n            if (randomColor >= 0 && randomColor < 0.2) {\r\n              $scope.profile_color = \"member-initials--sky\";\r\n            }\r\n            else if (randomColor >= 0.2 && randomColor < 0.4) {\r\n              $scope.profile_color = \"member-initials--pvm-purple\";\r\n            }\r\n            else if (randomColor >= 0.4 && randomColor < 0.6) {\r\n              $scope.profile_color = \"member-initials--pvm-green\";\r\n            }\r\n            else if (randomColor >= 0.6 && randomColor < 0.8) {\r\n              $scope.profile_color = \"member-initials--pvm-red\";\r\n            }\r\n            else if (randomColor >= 0.8 && randomColor < 1) {\r\n              $scope.profile_color = \"member-initials--pvm-yellow\";\r\n            }\r\n            randomColorval = 1;\r\n          }\r\n\r\n\t\t\t    if (Object.keys($scope.docs).length) {\r\n            $scope.profile_image = $scope.docs.profile_image;\r\n        \t}\r\n\r\n\t\t\t\t});\r\n\t\t\t\t// Settimeout for every 5 seconds on notification count\r\n\r\n\t\t\t} else if($cookies.get('ut') == 'employer') {\r\n\t\t\t\t$scope.is_employer = true;\r\n\t\t\t\tajaxService.getEmployerProfile().then(function(response) {\r\n\t\t\t\t\tvar data = response.data.data;\r\n          var randomColor = 0;\r\n          var randomColorval = 0;\r\n\r\n          $scope.profile_image = data.profile_picture_url;\r\n         \t$scope.profile_url = 'company/' + data.company.company_url;\r\n         \t$scope.account_type_string = data.account_type_string;\r\n\r\n\r\n          // Add initial to be used in default image\r\n          $scope.F_initial = data.first_name;\r\n          $scope.F_initial = $scope.F_initial.substr(0, 1);\r\n\r\n          $scope.L_initial = data.last_name;\r\n          $scope.L_initial = $scope.L_initial.substr(0, 1);\r\n\r\n          $scope.initial = $scope.F_initial + $scope.L_initial;\r\n\r\n          // change default photo's background color\r\n          if(randomColorval == 0) {\r\n            randomColor =Math.random();\r\n            if (randomColor >= 0 && randomColor < 0.2) {\r\n              $scope.profile_color = \"member-initials--sky\";\r\n            }\r\n            else if (randomColor >= 0.2 && randomColor < 0.4) {\r\n              $scope.profile_color = \"member-initials--pvm-purple\";\r\n            }\r\n            else if (randomColor >= 0.4 && randomColor < 0.6) {\r\n              $scope.profile_color = \"member-initials--pvm-green\";\r\n            }\r\n            else if (randomColor >= 0.6 && randomColor < 0.8) {\r\n              $scope.profile_color = \"member-initials--pvm-red\";\r\n            }\r\n            else if (randomColor >= 0.8 && randomColor < 1) {\r\n              $scope.profile_color = \"member-initials--pvm-yellow\";\r\n            }\r\n            randomColorval = 1;\r\n          }\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$scope.search = function() {\r\n\t\t\t\tvar user_search = $scope.globalsearch;\r\n\t\t\t\tif(user_search) {\r\n\t\t\t\t\twindow.location = base_url + 'job/search/#?q=' + user_search;\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.location = base_url + 'job/search/';\r\n\t\t\t\t}\r\n\t\t\t\tGlobalSearch.setSearchVal(user_search);\r\n\t\t\t}\r\n\r\n\t\t\t$scope.onTimeoutNotification = function() {\r\n\t\t\t\t$scope.params = {access_token: $cookies.get('token')};\r\n\t\t\t\t// //console.log('hb')\r\n\t\t\t\t// //console.log($scope.params)\r\n\t\t\t\t//$http({method: 'GET', params: $scope.params, url: GlobalConstant.HeartbeatApi})\r\n\t\t\t\t$http.get(GlobalConstant.HeartbeatApi)\r\n\t\t\t\t.then(function(response) {\r\n\t    \t\tif(response.status == 200) {\r\n\t    \t\t\tvar data = response.data.data;\r\n\t    \t\t\t$scope.count_nofications = (data.counters.notification > 0) ? data.counters.notification : \"\";\r\n\t    \t\t\t$scope.count_messages = (data.counters.message > 0) ? data.counters.message : \"\";\r\n\t    \t\t\t// $('.notification_count.notif').text($scope.count_nofications);\r\n\t    \t\t\t// $('.notification_count.message').text($scope.count_messages);\r\n    \t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// $timeout.cancel($scope.onTimeoutNotification)\r\n\t\t\t}\r\n\r\n\t\t\t$scope.onTimeoutNotification();\r\n      $interval($scope.onTimeoutNotification,15000);\r\n\r\n\t\t\t$(\".notificationLink\").on('click',function() {\r\n\t\t\t\tif(!$(\".notificationContainer.notif\").is(':visible')) {\r\n\t\t\t\t\t// Get Notification Event list\r\n\t        $http.get(GlobalConstant.NotificationEventApi)\r\n\t\t    \t.then(function(response) {\r\n\t\t    \t\tif(response.status == 200) {\r\n\t\t    \t\t\t$scope.notificationEvent = response.data.data;\r\n\t\t    \t\t}\r\n\t\t    \t});\r\n\t\t\t\t}\r\n\t    \t$(\".notificationContainer.message\").hide();\r\n\t\t\t\t$(\".notificationContainer.notif\").fadeToggle(300);\r\n\t\t\t\t// if ($(\".notificationContainer.message\").is(':visible')) {\r\n\t\t\t\t\t// $(\".notificationContainer.message\").hide();\r\n\t\t\t\t// } else if($(\".notificationContainer.setting\").is(':visible')) {\r\n\t\t\t\t// \t$(\".notificationContainer.setting\").hide();\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// $(\".notification_count.notif\").fadeOut(\"slow\");\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\r\n\t\t\t$(\".messageLink\").on('click',function() {\r\n\t\t\t\t// Get Notification Event list\r\n\t\t\t\tif(!$(\".notificationContainer.message\").is(':visible')) {\r\n\t\t\t\t\t$http.get(GlobalConstant.NotificationMessageApi)\r\n\t\t    \t.then(function(response) {\r\n\t\t    \t\t//console.log(response)\r\n\t\t    \t\tif(response.status == 200) {\r\n\t\t    \t\t\t$scope.notificationMessages = response.data.data;\r\n\t\t    \t\t}\r\n\t\t    \t});\r\n\t\t\t\t}\r\n\t\t\t\t// if ($(\".notificationContainer.notif\").is(':visible')) {\r\n\t\t\t\t$(\".notificationContainer.notif\").hide();\r\n\t\t\t\t// } else if($(\".notificationContainer.setting\").is(':visible')) {\r\n\t\t\t\t// \t$(\".notificationContainer.setting\").hide();\r\n\t\t\t\t// }\r\n\t\t\t\t$(\".notificationContainer.message\").fadeToggle(300);\r\n\t\t\t\t// $(\".notification_count.message\").fadeOut(\"slow\");\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\r\n\t\t\t// Notication Event and Message link\r\n    \t$scope.notification_seen = function(id, url, type) {\r\n    \t\tif (url.indexOf('/') === 0) {\r\n          url = url.substring(1);\r\n        }\r\n\r\n    \t\t$http.get(GlobalConstant.NotificationApi +'/'+ id +'/seen')\r\n\t    \t.then(function(response) {\r\n\t    \t\tif(response.status == 204) {\r\n\t    \t\t\t// Candidate or Employer redirect to messages page\r\n\t    \t\t\tif($('body').hasClass('Candidate')) {\r\n\t\t\t\t\t\t\twindow.location = base_url + url;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\twindow.location = base_url + url;\r\n\t\t\t\t\t\t}\r\n\t    \t\t}\r\n    \t\t});\r\n  \t\t}\r\n\t\t} // end tokenKey condition\r\n\r\n\t\t$scope.goToLink = function(e) {\r\n\t\t\tvar elem = $(e.currentTarget);\r\n\t\t\t$window.location = elem.attr('href');\r\n\t\t}\r\n\t\t$scope.navigateUrl = function(e){\r\n\t\t\twindow.location.href = e;\r\n\t\t};\r\n\t\t//Logout\r\n\t\t/*$scope.logout = function(value) {\r\n\t\t\t$.ajax({\r\n    \t\t\turl  : GlobalConstant.logoutPage,\r\n    \t\t\ttype : 'get',\r\n    \t\t\t'success' : function(data) {\r\n    \t\t\t\tif(data == 200) {\r\n    \t\t\t\t\t$window.location.href =  base_url;\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n  \t\t});*/\r\n  \t\t$scope.logout = function() {\r\n  \t\t\tvar token = $cookies.get('api_token');\r\n\t\t    $http.get( window.location.origin + \"/api/logout?token=\" + token, {\r\n\t\t      headers: { 'Authorization': 'Bearer ' + token }\r\n\t\t    }).then(function(response) {\r\n\t\t      $window.location.href =  '/login';\r\n\t\t  });  \r\n\t\t}\r\n\r\n\t}]);\r\n/**** END MENU  ***********************************/\r\n\r\n\t/* File Upload Service (Resume/Portfolio) */\r\n\r\n\twindow.onload = function() {\r\n    if(!XMLHttpRequest.prototype.sendAsBinary) {\r\n      XMLHttpRequest.prototype.sendAsBinary = function(datastr) {\r\n        function byteValue(x) {\r\n          return x.charCodeAt(0) & 0xff;\r\n        }\r\n        var ords = Array.prototype.map.call(datastr, byteValue);\r\n        var ui8a = new Uint8Array(ords);\r\n        try{\r\n          this.send(ui8a);\r\n        }catch(e) {\r\n          this.send(ui8a.buffer);\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n\tapp.factory('fileUploadService', ['GlobalConstant','$cookies', '$http', '$interval', '$timeout', '$window', 'ajaxService',\r\n\t\tfunction(GlobalConstant, $cookies, $http, $interval, $timeout, $window, ajaxService) {\r\n\r\n\t\treturn {\r\n\t\t\tinitParams : function($scope) {\r\n\t\t\t\t$scope.record_btn = false;\r\n\t\t\t\t$scope.record_again_btn = false;\r\n\t\t\t\t$scope.stop_btn = false;\r\n\t\t\t\t$scope.save_btn = false;\r\n\t\t\t\t$scope.change_btn = false;\r\n\t\t\t\t$scope.showSection1 = false;\r\n\t\t\t\t$scope.showSection2 = true;\r\n\t\t\t\t$scope.modal_percent = true;\r\n        $scope.ondragoverout_image = false;\r\n      \t$scope.ondragover_image = true;\r\n\t\t\t\t$scope.record_btnRE = false;\r\n\t\t\t\t$scope.record_again_btnRE = false;\r\n\t\t\t\t$scope.stop_btnRE = false;\r\n\t\t\t\t$scope.save_btnRE = false;\r\n\t\t\t\t$scope.change_btnRE = false;\r\n\t\t\t\t$scope.showSection1RE = false;\r\n\t\t\t\t$scope.showSection2RE = true;\r\n\t\t\t\t$scope.modal_percentRE = true;\r\n\t\t\t \t$scope.ondragoverout_imageRE = false;\r\n        $scope.ondragover_imageRE = true;\r\n        $scope.guid_response = \"\"; //video upload status watch\r\n        // $scope.guid_response_profile = \"\"; //video upload status watch\r\n        $scope.profile_photo_uploaded = \"\";\r\n        $scope.upload_init = 0;\r\n        $scope.uploading_message = \"\";\r\n\t    \t$scope.upload_code = 0;\r\n\t\t\t},\r\n\r\n\t\t\tbuttonsHideShow : function($scope, a,b,c,d,e) {\r\n\t\t\t\t$scope.record_btn = a;\r\n\t\t\t\t$scope.record_again_btn = b;\r\n\t\t\t\t$scope.stop_btn = c;\r\n\t\t\t\t$scope.save_btn = d;\r\n\t\t\t\t$scope.change_btn = e;\r\n\t\t\t\t$scope.record_btnRE = a;\r\n\t\t\t\t$scope.record_again_btnRE = b;\r\n\t\t\t\t$scope.stop_btnRE = c;\r\n\t\t\t\t$scope.save_btnRE = d;\r\n\t\t\t\t$scope.change_btnRE = e;\r\n\r\n\t\t\t\tif($scope.modalId) {\r\n\t\t\t\t\tthis.hideShowManual($scope, '#record_btn',b);\r\n\t\t\t\t\tthis.hideShowManual($scope, '#take_photo_btn',a);\r\n\t\t\t\t\tthis.hideShowManual($scope, '#record_again_btn',c);\r\n\t\t\t\t\tthis.hideShowManual($scope, '#change_btn',d);\r\n\t\t\t\t\tthis.hideShowManual($scope, '#save_btn',e);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tsectionsHideShow : function($scope, a,b) {\r\n\t\t\t\t$scope.showSection1 = a;\r\n\t\t\t\t$scope.showSection2 = b;\r\n\t\t\t\t$scope.showSection1RE = a;\r\n\t\t\t\t$scope.showSection2RE = b;\r\n\r\n\t\t\t\tif($scope.modalId) {\r\n\t\t\t\t\tthis.hideShowManual($scope, '#section1-holder',a);\r\n\t\t\t\t\tthis.hideShowManual($scope, '#section2-holder',b);\r\n\t\t\t\t}\r\n\t\t\t\t// that.sectionsHideShow($scope,true,false);\r\n\t    \t// that.buttonsHideShow($scope, true,true,true,false,false);\r\n\t\t\t},\r\n\r\n\t\t\thideShowManual : function($scope, elem, param) {\r\n\t\t\t\tif(param) {\r\n\t\t\t\t\t$($scope.modalId + ' ' +  elem).addClass('ng-hide');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$($scope.modalId + ' ' +  elem).removeClass('ng-hide');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\topenModal : function($scope, elem, docFileType) {\r\n\r\n\t\t\t\t// console.log('OPEN MODAL: ', $(elem).find());\r\n\t\t\t\tthis.initParams($scope);\r\n\t\t\t\tthis.fileChange($scope);\r\n\t\t\t\t$scope.modalId = elem;\r\n\r\n\t\t\t\tif(elem) {\r\n\t\t\t\t\t$(elem).attr('data-docFileType', docFileType)\r\n\t\t\t\t\t$(elem).modal('show');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$('#pmvResumeModal').modal('show')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\topenErrorModal : function(elem) {\r\n\t\t\t\tif(elem) {\r\n\t\t\t\t\t$(elem).modal('show');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$('#pmvErrorMsg').modal('show')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tfileChange : function($scope) {\r\n\t\t\t\t$scope.modal_percent_value = 0;\r\n      \t$scope.showSection1 = false;\r\n      \t$scope.showSection2 = true;\r\n      \t$scope.modal_percent = true;\r\n      \t$scope.ondragoverout_image = false;\r\n      \t$scope.ondragover_image = true;\r\n\r\n      \tif($('#section1-holder').hasClass('ng-hide')) {\r\n      \t\t$('#section1-holder').removeClass('ng-hide')\r\n      \t\t$('#section2-holder').addClass('ng-hide')\r\n      \t\t$('.modal_percent_new').addClass('ng-hide')\r\n      \t\t$('#ondragoverout_image').removeClass('ng-hide')\r\n      \t\t$('#ondragover_image').addClass('ng-hide')\r\n      \t}\r\n\t\t\t},\r\n\t\t\t/*\r\n\t\t\t$scope = angular scope\r\n\t\t\telemId = Element id\r\n\t\t\tevt = drop/drop functionality\r\n\t\t\tdocFileType = file type eg. resume, video, etc\r\n\t\t\tfileSizeLimit = file size limit (default 2mb)\r\n\t\t\tisAuthenticate = is user logged in\r\n\t\t\t*/\r\n\t\t\tuploadFile : function($scope, elemId, evt, docFileType, fileSizeLimit, isAuthenticate, origin) {\r\n\t\t\t\tif(!fileSizeLimit) fileSizeLimit = 2;\r\n\t\t\t\t// console.log(\"uploadFile1: \", docFileType, origin);\r\n\t\t\t\t// $scope.file_upload_modal = function(evt,elem_id) {\r\n        var fileField = document.getElementById(elemId);\r\n     \t \tvar file_folder = \"\";\r\n       \tvar allowed_files = [];\r\n      \tswitch(docFileType) {\r\n      \t\tcase 'image' :\r\n      \t\tallowed_files = ['jpg','jpeg','png'];\r\n      \t\tfile_folder = 'image';\r\n      \t\tbreak;\r\n      \t\tcase 'cover_letter' :\r\n      \t\tallowed_files = ['doc', 'docx', 'pdf',  'xls', 'indd', 'eps', 'psd', 'mp4', 'xlsx', 'ppt', 'pptx' ];\r\n      \t\t// file_folder = 'resume'; // PQB-23 not fixed yet\r\n  \t\t\t\tfile_folder = 'cover_letter';\r\n      \t\tcase 'transcript' :\r\n      \t\tcase 'portfolio' :\r\n      \t\tcase 'resume' :\r\n      \t\tcase 'application_question_answer' :\r\n      \t\tallowed_files = ['doc', 'docx', 'pdf',  'xls', 'indd', 'eps', 'psd', 'mp4', 'xlsx', 'ppt', 'pptx' ];\r\n      \t\tfile_folder = docFileType;\r\n      \t\tbreak;\r\n    \t\t \tdefault:\r\n    \t\t \tallowed_files = ['doc', 'docx', 'pdf',  'xls', 'indd', 'eps', 'psd', 'mp4', 'xlsx', 'ppt', 'pptx' ];\r\n    \t\t \tfile_folder = docFileType;\r\n      \t}\r\n\r\n      \tif(docFileType == 'application_question_answer') {\r\n      \t\tfile_folder = 'resume';\r\n      \t}\r\n      \t// console.log(file_folder,333)\r\n\r\n        var file_data = \"\";\r\n        if (evt) {\r\n          file_data = evt.dataTransfer.files[0];\r\n        } else {\r\n        \tfile_data = fileField.files[0];\r\n        }\r\n        // console.log(\"uploadFile2\");\r\n\r\n        var fileSize = parseFloat(file_data.size / (1024 * 1024)).toFixed(2)\r\n        // Delete old file if user change file\r\n        if($('#'+file_folder+'_save').attr('data-filename')) {\r\n\t\t\t\t\tvar oldFile = $('#'+file_folder+'_save').attr('data-filename');\r\n\t\t\t\t\tvar folder = $('#'+file_folder+'_save').attr('data-folder');\r\n\t\t\t\t\t$scope.delete_old_file(oldFile,folder);\r\n\t\t\t\t}\r\n\r\n        var filename = file_data.name;\r\n        var last_dot = filename.lastIndexOf('.');\r\n        var ext = filename.substr(last_dot + 1).toLowerCase();\r\n\r\n        if (allowed_files.indexOf(ext) == -1) {\r\n          alert('Invalid file must be '+allowed_files.join(', ')+' extension');\r\n          this.fileChange($scope);\r\n          return false;\r\n        } else if(fileSizeLimit && fileSize > fileSizeLimit) {\r\n        \talert('File should not exceed '+fileSizeLimit+'mb in size.');\r\n        \tthis.fileChange($scope);\r\n      \t \treturn false;\r\n        }\r\n\r\n        if (angular.isDefined($cookies.get('obkey'))) {\r\n        \tvar ob_key = $cookies.get('obkey');\r\n        } else {\r\n        \tvar ob_key = $cookies.get('ob_key');\r\n        }\r\n\r\n        // console.log(\"uploadFile3\");\r\n\r\n        var form_data = new FormData();\r\n        form_data.append('file', file_data);\r\n        var params = '?ob_key=' + ob_key + '&file_folder=' + file_folder;\r\n        $scope.modal_file_percent_value = 0;\r\n        var uploadUrl = GlobalConstant.FileUploadUrl + '/upload_submit';\r\n        if(!isAuthenticate) {\r\n        \tuploadUrl = GlobalConstant.RegisterFileUpload;\r\n        \tif($('#FormStep2').is(':visible')) {\r\n        \t\tuploadUrl += '?not_profile=1';\r\n        \t}\r\n\r\n        \tif($('.formstep2 #pmvFileModalNew, .notImg #pmvFileModalNew').is(':visible')) {\r\n        \t\tuploadUrl += '?not_profile=1';\r\n        \t}\r\n        }\r\n        // console.log(\"uploadFile4: \", uploadUrl +  params);\r\n\r\n        $.ajax({\r\n          url: uploadUrl +  params,\r\n          dataType: 'text',\r\n          cache: false,\r\n          contentType: false,\r\n          processData: false,\r\n          data: form_data,\r\n          type: 'post',\r\n          success: function(res) {\r\n            // console.log(\"upload file:\", res);\r\n            res = JSON.parse(res);\r\n            if (res.response == 200) {\r\n              // console.log('global func Uploading Success');\r\n              if(!evt) {\r\n              \tfileField.value = '';\r\n              }\r\n             \t// alert(docFileType)\r\n             \t// console.log(file_folder)\r\n              $cookies.put('uploadedFile', res.filename, {'path':'/' });\r\n              $cookies.put('uploadedFolder', file_folder, {'path':'/' });\r\n              $cookies.put('docFileTypeM', docFileType, {'path':'/' });\r\n\r\n\r\n \t\t\t\t\t\t\t$scope.modal_percent = true;\r\n \t\t\t\t\t\t\t$scope.showSection1 = true;\r\n \t\t\t\t\t\t\t$scope.showSection2 = false;\r\n\r\n \t\t\t\t\t\t\t// console.log(\"docFileType: \", docFileType);\r\n\r\n \t\t\t\t\t\t\t$scope.uploadResponseText = '<h2>File has been uploaded.\\Save or change file?\\</h2>';\r\n \t\t\t\t\t\t\tif(docFileType == 'image') {\r\n \t\t\t\t\t\t\t\t$scope.classImg = 'img-h';\r\n\t \t\t\t\t\t\t\tvar img = '<img class=\"'+$scope.classImg+'\" src=\"assets/Uploads/Image/'+res.filename+'\" >';\r\n\t\t\t\t\t\t\t\t$scope.uploadResponseText = '<div class=\"modal-image-container\">'+img+'</div>';\r\n\r\n \t\t\t\t\t\t\t\tif($('#section2-holder').hasClass('ng-hide')) {\r\n \t\t\t\t\t\t\t\t\t$('#section2-holder').removeClass('ng-hide');\r\n \t\t\t\t\t\t\t\t\t$('#section1-holder').addClass('ng-hide');\r\n\r\n \t\t\t\t\t\t\t\t\tif($('#FormStep2').is(':visible')) {\r\n \t\t\t\t\t\t\t\t\t\t$('#uploadResponseText').html('<img width=\"220\" src=\"assets/Uploads/Image/'+res.filename+'\" >'); // normal render\r\n \t\t\t\t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\t\t\t\t$('#uploadResponseText').html($scope.uploadResponseText); // render in circle\r\n \t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t$('#save_btn').attr('data-targetElementId', '');\r\n \t\t\t\t\t\t\t} else if(docFileType == 'resume') {\r\n \t\t\t\t\t\t\t\t// $('#save_btn').attr('data-targetElementId', 'Form_my_file')\r\n \t\t\t\t\t\t\t\t// console.log(\"upload RESUME\");\r\n \t\t\t\t\t\t\t\t$scope.targetElementId = 'Form_my_file';\r\n \t\t\t\t\t\t\t} else if(docFileType == 'portfolio') {\r\n \t\t\t\t\t\t\t\t$scope.targetElementId = 'Form_my_portfolio';\r\n \t\t\t\t\t\t\t\t // $('#save_btn').attr('data-targetElementId', 'Form_my_portfolio')\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t// console.log(\"uploadFile6\");\r\n\r\n            }\r\n            // console.log(\"uploadFile7\");\r\n          },\r\n          beforeSend: function() {\r\n            $scope.modal_percent = false;\r\n          },\r\n          xhr: function() {\r\n            var xhr = new window.XMLHttpRequest();\r\n            xhr.upload.addEventListener(\"progress\", function(evt) {\r\n              if (evt.lengthComputable) {\r\n                $scope.modal_percent_value = Math.ceil((evt.loaded / evt.total) * 100);\r\n              }\r\n            }, false);\r\n            return xhr;\r\n          },\r\n        });\r\n      },\r\n\r\n\t    save : function($scope, isAuthenticate, userType, origin) {\r\n\t    \t// console.log(\"FILE SAVE: \", origin);\r\n\t\t\t\tvar docFileType = $cookies.get('docFileTypeM');\r\n\t\t\t\tvar obkey = $cookies.get('obkey');\r\n\t\t\t\t$('.modal').modal('hide');\r\n\t\t\t\t// if(!$scope.is_candidate_question) {\r\n\t\t\t\t// \t$scope.is_candidate_question = false;\r\n\t\t\t\t// }\r\n\t\t\t\tvar uploadToCloud = GlobalConstant.FileUploadUrl + \"/upload_to_cloud\";\r\n\t\t\t\tif(isAuthenticate === false) {\r\n\t\t\t\t\tuploadToCloud = GlobalConstant.RegisterUploadToCloud;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(userType && userType == 'employer_register') {\r\n\t\t\t\t\tif($cookies.get('azureContainer')) {\r\n\t\t\t\t\t\tobkey = $cookies.get('azureContainer');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if($cookies.get('cont_key') && $cookies.get('ob_key')) {\r\n\t\t\t\t\tobkey = $cookies.get('cont_key') + '/' + $cookies.get('ob_key');\r\n\t\t\t\t}\r\n\t\t\t\t// //console.log(userType)\r\n\t\t\t\t// console.log(\"apload: \", uploadToCloud, $cookies.get('uploadedFolder'));\r\n\t\t\t\t// console.log(\"apload filename: \", $cookies.get('uploadedFile'));\r\n\t\t\t\t// return false;\r\n\r\n        $.ajax({\r\n          url: uploadToCloud,\r\n          method: 'post',\r\n          data: {\r\n            filename: $cookies.get('uploadedFile'),\r\n            folder: $cookies.get('uploadedFolder'),\r\n            obkey: obkey,\r\n            is_candidate_question : $scope.is_candidate_question\r\n          },\r\n          dataType : 'json',\r\n          async : false,\r\n          success: function(data) {\r\n          \tvar resUploadToCloud = data;\r\n          \tvar resPVMDocUploaded = '';\r\n          \t// console.log('SAVE DOC UPLOAD return data: ', data);\r\n\r\n          \t// $scope.return_data = data;\r\n\r\n\r\n\r\n            if (data.response == 200) {\r\n              // Candidate edit profile page, updates those video/resume/supporting\r\n              // docs buttons on edit profile page\r\n             \tif($('body.my-profile').length) {\r\n             \t\t $http.get(GlobalConstant.profileApi)\r\n\t\t            .then(function(response) {\r\n\t                var data = response.data.data;\r\n\t                //Variables\r\n\t                angular.forEach(data, function(v,k) {\r\n\t                  $scope[k] = v;\r\n\t                })\r\n\t\t            });\r\n             \t}\r\n            \t$('.profile_img').attr('src', data.url)\r\n              if(docFileType == 'image') {\r\n              \t// Employer Register page\r\n              \tvar img = '<img class=\"'+$scope.classImg+'\" src=\"'+data.data+'\" >';\r\n              \tvar imgStr = '<div class=\"modal-image-container\">'+img+'</div>';\r\n\r\n              \tif($('#profileImageMessage').is(':visible')) {\r\n              \t\t$('#profileImageMessage').html(imgStr);\r\n              \t}\r\n              \tif($('#file_upload_msg').is(':visible')) {\r\n              \t\t$('#file_upload_msg').html('<img width=\"220\" src=\"'+data.data+'\" >');\r\n              \t}\r\n              \tif($('#file_upload_msg2').is(':visible')) {\r\n              \t\t$('#file_upload_msg2').html(imgStr);\r\n              \t}\r\n              \t// text field on the register steps form\r\n              \t$('.file-upload-input:visible').val(data.data);\r\n              } else {\r\n              \tif(docFileType == 'resume') {\r\n              \t\t// $scope.fileType = 'resume';\r\n              \t\tvar elemId = 'Form_my_file';\r\n              \t} else if(docFileType == 'portfolio') {\r\n              \t\t// $scope.fileType = 'portfolio';\r\n              \t\t// docFileType = 'supp';\r\n              \t\tvar elemId = 'Form_my_portfolio';\r\n              \t} else if(docFileType == 'cover_letter') {\r\n              \t\t// $scope.fileType = 'cover_letter';\r\n              \t} else if(docFileType == 'transcript') {\r\n              \t\t// $scope.fileType = 'transcript';\r\n              \t}\r\n\r\n\r\n              \tif ($scope.application_objId) { // if from job appplication\r\n              \t\t// NEW API doc saving BEGIN\r\n\t              \tvar f_name = data.file_name;\r\n\r\n\t              \tf_name = f_name.substr(f_name.lastIndexOf('.') + 1);\r\n\t              \tvar data = {data:\r\n\t              \t\t{\r\n\t              \t\t\tdoc_url:data.url,\r\n\t              \t\t\tdoc_file_type: f_name,\r\n\t              \t\t\tdoc_type: docFileType,\r\n\t              \t\t\textra_data:[],\r\n\t              \t\t\tjob_application_id: $scope.application_objId,\r\n\t              \t\t\tdoc_filename: data.file_name\r\n\t              \t\t}\r\n\t              \t}\r\n\r\n\t              \t// console.log(\"SEBENG!: \", data);\r\n\t              \tajaxService.postCandidateDoc(data).then(function(res){\r\n\t\t\t          \t\tresUploadToCloud.id = res.id;\r\n\t\t\t          \t\t$scope.return_uploaded_app_sq = resUploadToCloud; // SQ watch\r\n\t\t\t          \t\t// console.log('nag apload ng sagot SQ: ', $scope.return_uploaded_app_sq);\r\n\t              \t});\r\n\t              \t// NEW API doc saving END\r\n              \t}\r\n\r\n              \t// still in development, separate returns of every origin of upload, these are watched scopes\r\n\t\t          \tif (origin == 'standard_question_answer') { // app SQ answers\r\n\t\t          \t\t// console.log(\"fota: \", resPVMDocUploaded);\r\n\t\t          \t\t// resUploadToCloud.id = resPVMDocUploaded.id;\r\n\t\t          \t\t// $scope.return_uploaded_app_sq = resUploadToCloud;\r\n\t\t          \t\t// console.log('nag apload ng sagot SQ: ', $scope.return_uploaded_app_sq);\r\n\t\t          \t} else if (origin == 'candidate_profile_edit_app') { // candidate docs upload\r\n\t\t          \t\t$scope.return_uploaded_app_profile = {\r\n\t\t          \t\t\tfile_name:\tresUploadToCloud.file_name,\r\n\t\t          \t\t\turl: resUploadToCloud.url,\r\n\t\t          \t\t\tdoctype: docFileType\r\n\t\t          \t\t};\r\n\t\t          \t\t// console.log('nag apload ng payl sa profile: ', $scope.return_uploaded_app_profile);\r\n\t\t          \t} else {\r\n\t\t          \t\t$scope.return_data = resUploadToCloud;\r\n\t\t          \t}\r\n\r\n              }\r\n            \talert('Data has been saved.');\r\n            }\r\n          }\r\n        });\r\n\t    },\r\n\r\n\t    mobile_image_upload : function($scope) {\r\n\r\n\t\t\t\tvar file_img = $('#mobile_image_upload')[0];\r\n\t\t\t\tvar file = file_img.files[0];\r\n\t\t\t\tvar formData = new FormData();\r\n\t\t\t\tformData.append('file',file);\r\n\r\n        if(file.type != 'image/png' && file.type != 'image/jpg' && file.type != 'image/gif' && file.type != 'image/jpeg') {\r\n          alert('Invalid file must be .png, .jpg, .gif extension');\r\n          return false;\r\n        }\r\n\t\t\t\t// $scope.mobile_agent_name = 'ios';\r\n\t\t\t\t// $scope.mobile_agent = true;\r\n        var params = '?ob_key=' + $cookies.get('obkey');\r\n        params += '&file_folder=image';\r\n        params += '&is_mobile=' + $scope.mobile_agent_name;\r\n\r\n        if($scope.mobile_agent) {\r\n          $.ajax({\r\n            type: \"POST\",\r\n            url: GlobalConstant.FileUploadUrl + '/upload_submit_mobile' + params,\r\n            dataType: 'json',\r\n            data: formData,\r\n            processData: false,  // tell jQuery not to process the data\r\n            contentType: false,  // tell jQuery not to set contentType\r\n\t          beforeSend : function() {\r\n\t            $('#pmvImageModalNew').modal('hide');\r\n\t            $('#pmvImageModalMsg').find('.modal-body').text('Profile image saved. Please wait a few moment to update.')\r\n\t            .end().modal('show');\r\n\t          },\r\n\t          success : function(data) {\r\n\t            //console.log(data);\r\n\t            if(data) {\r\n\t              if(data.response == 200) {\r\n\t                $scope.profile_image = data.url;\r\n\t                $('#top_profile_image img').attr('src', data.url);\r\n\t              }\r\n\t            }\r\n\t          }\r\n      \t\t});\r\n      \t}\r\n\t  \t},\r\n\r\n\t    mobile_resume_upload : function($scope) {\r\n    \t \tvar fileField = document.getElementById(\"mobile_resume_upload\");\r\n    \t \tif($scope.fileElemId) {\r\n    \t \t\tfileField = document.getElementById($scope.fileElemId);\r\n    \t \t}\r\n        var file_data = fileField.files[0];\r\n        var allowed_files = ['doc', 'docx', 'pdf', 'xls', 'indd', 'eps', 'psd', 'mp4', 'xlsx', 'ppt', 'pptx'];\r\n        var filename = file_data.name;\r\n        var last_dot = filename.lastIndexOf('.');\r\n        var file_folder = 'resume';\r\n        if($scope.docType) {\r\n        \tfile_folder = $scope.docType;\r\n        }\r\n        var ext = filename.substr(last_dot + 1).toLowerCase();\r\n        if (allowed_files.indexOf(ext) == -1) {\r\n          alert('Invalid file must be .doc, .docx, .pdf, .xls, .indd, .eps, .psd, .mp4, .xlsx, .ppt, .pptx extension');\r\n          return false;\r\n        }\r\n        var ob_key = $cookies.get('obkey');\r\n        var form_data = new FormData();\r\n        form_data.append('file', file_data);\r\n        $scope.progressResumeValue = 0;\r\n        $scope.progressPortfolioValue = 0;\r\n\r\n        var data_process = 'data_progress';\r\n        if($scope.progress_bar) {\r\n        \tdata_process = $scope.progress_bar;\r\n        }\r\n        if ($('#'+data_process).hasClass('ng-hide')) {\r\n          $('#'+data_process).removeClass('ng-hide');\r\n        }\r\n\r\n        var params = '?ob_key=' + ob_key + '&file_folder=' + file_folder;\r\n        $.ajax({\r\n          url: GlobalConstant.FileUploadUrl + '/upload_submit' + params,\r\n          dataType: 'text',\r\n          cache: false,\r\n          contentType: false,\r\n          processData: false,\r\n          data: form_data,\r\n          type: 'post',\r\n          success: function(res) {\r\n            var res = JSON.parse(res);\r\n            //console.log(res)\r\n\r\n            if (res.response == 200) {\r\n              // alert('Uploading Success');\r\n              if (!$('#'+data_process).hasClass('ng-hide')) {\r\n                $scope.progressResumeValue = 0;\r\n                $scope.progressPortfolioValue = 0;\r\n                $('#'+data_process).addClass('ng-hide');\r\n                fileField.value = '';\r\n                $.ajax({\r\n                  url: GlobalConstant.FileUploadUrl + '/upload_to_cloud',\r\n                  type: 'post',\r\n                  data: {\r\n                    filename: res.filename,\r\n                    folder: file_folder,\r\n                    obkey: ob_key,\r\n                    token_id: $cookies.get('token_id')\r\n                  },\r\n                  success: function(data) {\r\n                  \t//console.log(data)\r\n                    if (data) {\r\n                    \t// Candidate edit profile page, updates those video/resume/supporting\r\n\t\t\t\t\t\t\t\t\t\t\t// docs buttons on edit profile page\r\n                    \tif($('body.my-profile').length) {\r\n\t                   \t\t$http.get(GlobalConstant.profileApi)\r\n\t\t\t\t\t\t            .then(function(response) {\r\n\t\t\t\t\t                var data = response.data.data;\r\n\t\t\t\t\t                angular.forEach(data, function(v,k) {\r\n\t\t\t\t\t                \t$scope[k] = v;\r\n\t\t\t\t\t                })\r\n\t\t\t\t\t\t            });\r\n                   \t\t}\r\n                      alert('file saved.');\r\n                    } else {\r\n                      alert('Internal error.');\r\n                    }\r\n                    fileField.value = \"\";\r\n                  }\r\n                });\r\n              }\r\n\r\n            } else {\r\n              alert('Internal error.')\r\n            }\r\n          },\r\n          beforeSend: function() {\r\n            $('#file_upload_msg').html('uploading to server please wait...');\r\n          },\r\n          xhr: function() {\r\n            var xhr = new window.XMLHttpRequest();\r\n            xhr.upload.addEventListener(\"progress\", function(evt) {\r\n              if (evt.lengthComputable) {\r\n                var percentComplete = Math.ceil((evt.loaded / evt.total) * 100);\r\n              \tif(file_folder == 'resume') {\r\n              \t\t$scope.progressResumeValue = percentComplete;\r\n              \t} else if(file_folder == 'portfolio') {\r\n              \t\t $scope.progressPortfolioValue = percentComplete;\r\n              \t}\r\n              }\r\n            }, false);\r\n\r\n            // xhr.addEventListener(\"progress\", function(evt) {\r\n            //     if (evt.lengthComputable) {\r\n            //         var percentComplete = evt.loaded / evt.total;\r\n            //         //Do something with download progress\r\n            //          //console.log('here');\r\n            //          //console.log(percentComplete);\r\n            //     }\r\n            // }, false);\r\n\r\n            return xhr;\r\n          },\r\n        });\r\n\t    },\r\n\r\n\t\t  mobile_portfolio_upload : function($scope) {\r\n\t\t \t\tvar fileField = document.getElementById(\"mobile_portfolio_upload\");\r\n\t      var file_data = fileField.files[0];\r\n\t      var allowed_files = ['doc', 'docx', 'pdf', 'xls', 'indd', 'eps', 'psd', 'mp4', 'xlsx', 'ppt', 'pptx'];\r\n\t      var filename = file_data.name;\r\n\t      var last_dot = filename.lastIndexOf('.');\r\n\t      var file_folder = 'portfolio';\r\n\t      var ext = filename.substr(last_dot + 1).toLowerCase();\r\n\t      if (allowed_files.indexOf(ext) == -1) {\r\n\t        alert('Invalid file must be .doc, .docx, .pdf,  .xls, .indd, .eps, .psd, .mp4, .xlsx, .ppt, .pptx extension');\r\n\t        return false;\r\n\t      }\r\n\t      var ob_key = $cookies.get('obkey');\r\n\t      var form_data = new FormData();\r\n\t      form_data.append('file', file_data);\r\n\t      $scope.progressPortfolioValue = 0;\r\n\r\n\t      if ($('#data_progress_portfolio').hasClass('ng-hide')) {\r\n\t        $('#data_progress_portfolio').removeClass('ng-hide');\r\n\t      }\r\n\r\n\t    \tvar params = '?ob_key=' + ob_key + '&file_folder=' + file_folder;\r\n\t      $.ajax({\r\n\t        url: GlobalConstant.accountPage + '/upload_submit' + params,\r\n\t        dataType: 'text',\r\n\t        cache: false,\r\n\t        contentType: false,\r\n\t        processData: false,\r\n\t        data: form_data,\r\n\t        type: 'post',\r\n\t        success: function(res) {\r\n\t          var res = JSON.parse(res);\r\n\t          if (res.response == 200) {\r\n\t            // alert('Uploading Success');\r\n\t            if (!$('#data_progress_portfolio').hasClass('ng-hide')) {\r\n\t              $scope.progressPortfolioValue = 0;\r\n\t              $('#data_progress_portfolio').addClass('ng-hide');\r\n\t              fileField.value = '';\r\n\t              $.ajax({\r\n\t                url: GlobalConstant.accountPage + '/upload_to_cloud',\r\n\t                type: 'post',\r\n\t                data: {\r\n\t                  filename: res.filename,\r\n\t                  folder: file_folder,\r\n\t                  obkey: ob_key,\r\n\t                  token_id: $cookies.get('token_id')\r\n\t                },\r\n\t                success: function(data) {\r\n\t                  if (data) {\r\n\t                  \t// Candidate edit profile page, updates those video/resume/supporting\r\n\t      \t\t\t\t\t\t\t// docs buttons on edit profile page\r\n\t                \t\tif($('body.my-profile').length) {\r\n\t\t\t\t\t\t           \t$http.get(GlobalConstant.profileApi)\r\n\t\t\t\t\t\t\t\t\t      .then(function(response) {\r\n\t\t\t\t\t\t\t\t\t        var data = response.data.data;\r\n\t\t\t\t\t\t\t\t\t        //Variables\r\n\t\t\t\t\t\t\t\t\t        angular.forEach(data, function(v,k) {\r\n\t\t\t\t\t\t\t\t\t          $scope[k] = v;\r\n\t\t\t\t\t\t\t\t\t        });\r\n\t\t\t\t\t\t\t\t\t      });\r\n\t\t\t\t\t           \t}\r\n\r\n\t                    alert('file saved.');\r\n\t                  } else {\r\n\t                    alert('Internal error.');\r\n\t                  }\r\n\t                  fileField.value = \"\";\r\n\t                }\r\n\t              });\r\n\t            }\r\n\t          } else {\r\n\t            alert('Internal error.')\r\n\t          }\r\n\t        },\r\n\t        beforeSend: function() {\r\n\t          $('#file_upload_msg').html('uploading to server please wait...');\r\n\t        },\r\n\t        xhr: function() {\r\n\t          var xhr = new window.XMLHttpRequest();\r\n\t          xhr.upload.addEventListener(\"progress\", function(evt) {\r\n\t            if (evt.lengthComputable) {\r\n\t              var percentComplete = Math.ceil((evt.loaded / evt.total) * 100);\r\n\t              $scope.progressPortfolioValue = percentComplete;\r\n\t            }\r\n\t          }, false);\r\n\r\n\t          // xhr.addEventListener(\"progress\", function(evt) {\r\n\t          //   if (evt.lengthComputable) {\r\n\t          //     var percentComplete = evt.loaded / evt.total;\r\n\t          //     //Do something with download progress\r\n\t          //      ////console.log('here');\r\n\t          //      ////console.log(percentComplete);\r\n\t          //   }\r\n\t          // }, false);\r\n\t          return xhr;\r\n\t        },\r\n\t      });\r\n\t    },\r\n\r\n\t    uploadFileVideo : function($scope, file, params) {\r\n        // //console.log(file); return false;\r\n        // console.log(\"uploadFileVideo\");\r\n        var loaded = 0;\r\n        var step = (1024*1024) * 2;\r\n        var total = file.size;\r\n        var start = 0;\r\n        var progress = 0;\r\n        var reader = new window.FileReader();\r\n\r\n        reader.onload = function(e) {\r\n          var xhr = new XMLHttpRequest();\r\n          var upload = xhr.upload;\r\n\r\n          upload.addEventListener('load',function() {\r\n          \tloaded += step;\r\n            progress = Math.ceil((loaded/total) * 100);\r\n\r\n             //console.log(e);\r\n            if(progress > 100) {\r\n              progress = 100;\r\n            }\r\n\r\n            // //console.log(progress)\r\n            $scope.modal_percent_value = progress;\r\n            if(loaded <= total) {\r\n              blob = file.slice(loaded,loaded+step);\r\n              reader.readAsBinaryString(blob);\r\n            } else {\r\n              loaded = total;\r\n            }\r\n\r\n            if($scope.modal_percent_value == 100) {\r\n              var i = 0;\r\n              var promise = $interval(function() {\r\n                preview_new.src = 'assets/Uploads/' + $scope.folder_name + '/' + $scope.filename;\r\n                if($scope.isSafari == false) {\r\n                  preview_new.play();\r\n                  $(preview_new).removeAttr('muted')\r\n                }\r\n                $('#save_btn').attr('data-save_type', 'video');\r\n                $('#preview_new').attr('data-old_file', $scope.filename);\r\n                $('#preview_new').attr('data-file_folder', $scope.folder_name);\r\n\r\n                if($scope.isSafari == false) {\r\n                  $scope.sectionsHideShow(true, false);\r\n                  $scope.buttonsHideShow(true, true, true, false, false);\r\n                } else {\r\n                  $scope.video_source = preview_new.src;\r\n                  $scope.saveVideo();\r\n                }\r\n\r\n                $interval.cancel(promise);\r\n                if(i == 1) {\r\n                \t$interval.cancel(promise);\r\n                }\r\n                i++;\r\n                   // hide percent\r\n                \t$scope.modal_percent = true;\r\n              },3000);\r\n            }\r\n          },false);\r\n\r\n          xhr.open(\"POST\", GlobalConstant.FileUploadUrl + \"/video_upload_submit\" + params);\r\n          xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n          xhr.overrideMimeType(\"application/octet-stream\");\r\n          xhr.sendAsBinary(e.target.result);\r\n        };\r\n        var blob = file.slice(start,step);\r\n        reader.readAsBinaryString(blob);\r\n          //console.log()\r\n      },\r\n      video_upload_moli : function($scope, file_elm, evt) {\r\n    \t \tvar fileField = document.getElementById(file_elm);\r\n        $scope.modal_percent_value = 0;\r\n        // Drag/Drop upload\r\n        if (angular.isDefined(evt)) {\r\n          fileField = evt.dataTransfer;\r\n        }\r\n\r\n        // delete old upload video\r\n        if ($('#preview_new').attr('data-old_file')) {\r\n          var filename = $('#preview_new').attr('data-old_file');\r\n          var folder = $('#preview_new').attr('data-file_folder');\r\n          //this.delete_old_file(filename, folder);\r\n        }\r\n\r\n\t\t\t\t///Azure test\r\n\t\t\t\tvar fileToUpload = fileField.files[0];\r\n   \t\t\t//Orig Version of file upload below, uncomment to activate\r\n        var fileToUpload = fileField.files[0];\r\n        var ob_key = $cookies.get('obkey');\r\n        var d = new Date();\r\n        var n = d.getTime();\r\n        var splitFilename = fileToUpload.name.split('.');\r\n        var fileExt =  splitFilename[splitFilename.length-1] ;\r\n        var filename = n + '_' + fileToUpload.name.replace(/[^\\w\\s]/gi, '_') + '.'+fileExt;\r\n        var upload_folder = 'Video';\r\n\r\n        if ($scope.mobile_agent) {\r\n          filename = 'camera_' + filename;\r\n          upload_folder = 'Camera';\r\n          // $('#mobile_camera_capture').attr('data-old_file', filename);\r\n        }\r\n\r\n        //var allowed_files = ['mp4', 'wma', 'mpg', 'mpeg', 'avi', 'mov'];\r\n        var allowed_files = ['flv', 'mxf',  'gxf', 'ts', 'ps', '3gp', '3gpp',  'mpg', 'wmv',  'asf', 'avi', 'mp4',  'm4a',  'm4v',  'isma',  'ismv',  'dvr-ms',  'mkv',  'wav',  'mov']\r\n        var last_dot = filename.lastIndexOf('.');\r\n        var ext = filename.substr(last_dot + 1).toLowerCase();\r\n        // //console.log(ext)\r\n        // $scope.VideoUploadMsg = {\"show\": false, \"message\": \"\" }\r\n        if (allowed_files.indexOf(ext) == -1) {\r\n        \t//$scope.VideoUploadMsg = {\"show\": true, \"message\": allowed_files.join(\", \") }\r\n          alert(\"Invalid file format. File extension must be one of these - \"+allowed_files.join(\", \")+\" extension\");\r\n          return false;\r\n        }\r\n\r\n        var oneMb = 1048576;\r\n        var videoSizeLimit = 1000;\r\n        if(Math.ceil(fileToUpload.size / oneMb) > videoSizeLimit) {\r\n          alert('Max video limit must be '+videoSizeLimit+'mb in size.');\r\n           return false;\r\n        }\r\n\r\n        var rewrite_filename = filename.split(' ');\r\n        rewrite_filename = rewrite_filename.join('_');\r\n        var params = '?file_folder=' + upload_folder;\r\n        params += '&filename=' + rewrite_filename;\r\n        $scope.folder_name = upload_folder;\r\n        $scope.filename = rewrite_filename;\r\n\r\n        this.uploadFileVideo($scope, fileField.files[0], params);\r\n\r\n        preview_new.src = '';\r\n        preview_new.poster = '';\r\n        // show percent;\r\n        $scope.modal_percent = false;\r\n\r\n        if ($('#modal_percent').hasClass('hidden')) {\r\n          $('#modal_percent').removeClass('hidden');\r\n        }\r\n\t    },\r\n\t    video_upload : function($scope, file_elm, evt, origin, data) {\r\n\t    \t// console.log(\"STANDARD QUESTION VIDEO: \", $scope.upload_init);\r\n\r\n\r\n\t    \tconsole.log(\"ORIGIN: \", $scope.upload_init, file_elm, evt, origin, data);\r\n    \t\tvar fileField = document.getElementById(file_elm);\r\n    \t\tvar validateFileSizeFlag = true;\r\n        $scope.modal_percent_value = 0;\r\n\r\n        // Drag/Drop upload\r\n        if (angular.isDefined(evt)) {\r\n          fileField = evt.dataTransfer;\r\n        }\r\n\r\n        // delete old upload video\r\n        if ($('#preview_new').attr('data-old_file')) {\r\n          var filename = $('#preview_new').attr('data-old_file');\r\n          var folder = $('#preview_new').attr('data-file_folder');\r\n          //this.delete_old_file(filename, folder);\r\n        }\r\n\t\t\t\t///Azure test\r\n\t\t\t\tvar fileToUpload = fileField.files[0];\r\n\t\t\t\tconsole.log(\"file to upload \", fileToUpload);\r\n        var d = new Date();\r\n        var n = d.getTime();\r\n        var splitFilename = fileToUpload.name.split('.');\r\n\r\n        var fileExt = splitFilename[splitFilename.length-1] ;\r\n        var blobName = n + '_' + fileToUpload.name.replace(/[^a-z0-9\\s]/gi, \"\").replace(/[_\\s]/g, '-')+ '.'+fileExt;\r\n        var containerName = $cookies.get('obkey');\r\n\t\t\t\t// console.log(\"made it! \", blobName, splitFilename);\r\n\r\n        //Validate file format\r\n        var allowed_files = ['flv', 'mxf',  'gxf', 'ts', 'ps', '3gp', '3gpp',  'mpg', 'wmv',  'asf', 'avi', 'mp4',  'm4a',  'm4v',  'isma',  'ismv',  'dvr-ms',  'mkv',  'wav',  'mov']\r\n        var last_dot = blobName.lastIndexOf('.');\r\n        var ext = blobName.substr(last_dot + 1).toLowerCase();\r\n\r\n        if (allowed_files.indexOf(ext) == -1) {\r\n        \t$('.errorUpload').show();\r\n          $('.errorUpload .text span').html(\"Invalid file format. File extension must be one of these - \"+allowed_files.join(\", \")+\" extension\")\r\n\t\t\t\t\treturn false;\r\n        }\r\n\r\n        //Validate file size\r\n        var oneMb = 1048576; // 1gb\r\n        var uploadSizetoKilobyte = fileToUpload.size / 1000; // converting to KB\r\n        var uploadSizetoMegabyte = uploadSizetoKilobyte / 1000; //converting to MB\r\n        // var videoSizeLimit = 1024; // MB\r\n        var videoSizeLimit = 1000; // MB\r\n        console.log(\"video size: \", uploadSizetoMegabyte, uploadSizetoMegabyte / 1024);\r\n\r\n        // if(Math.ceil(fileToUpload.size / oneMb) > videoSizeLimit) {\r\n        if(uploadSizetoMegabyte > videoSizeLimit) { // limit to 80mb\r\n          //alert('Max video limit must be '+videoSizeLimit+'mb in size.');\r\n          $('.errorUpload').show();\r\n          $('.errorUpload .text span').html('Max video limit is only 1gb.')\r\n          validateFileSizeFlag = false;\r\n          return false;\r\n        } else {\r\n        \tconsole.log(\"File size validated\");\r\n        }\r\n\r\n        var useragent = $window.navigator.userAgent;\r\n        // console.log(\"made it 2! \", useragent);\r\n\r\n        //Check origin of file upload to determine what API to use on video upload\r\n        //Origin: Candidate edit profile page\r\n      \tconsole.log(\"postVideoUpload: \", fileToUpload);\r\n\r\n      \tif (validateFileSizeFlag) {\r\n\t      \t$scope.uploading_message = \"\";\r\n\t\t    \t$scope.uploading_message = \"Please wait..\";\r\n\t\t    \t$scope.upload_init = 1;\r\n\t\t    \t$scope.upload_code = 0;\r\n\t\t    \t$scope.guid_response_profile = false\r\n\r\n\t        if (origin == 'candidate_profile_edit') {\r\n\t        \t// console.log(\"BLAAM cndidate!\");\r\n\r\n\t        \t// old Arch BEGIN\r\n\t        \t// var apiurl = GlobalConstant.APIRoot+'candidate/videodoc/icebreaker_video';\r\n\t        \t// var data = {data:{'filename': blobName, 'user_agent_logs': useragent}} ;\r\n\t        \t// this.AzureVideoUploader($scope, fileToUpload, apiurl, data, origin);\r\n\t        \t// old Arch END\r\n\r\n\t        \tajaxService.postUpload(fileToUpload, 'video', '', '', useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\r\n\t        \t\tif (response.success) {\r\n\t\t\t\t\t\t\t\t$scope.preview_img = 'loading';\r\n\t      \t\t\t\t$scope.guid_response_profile = response.success;\r\n\t\t\t      \t\t$scope.uploading_message = \"Your video is now being prepared for publishing..\"\r\n\t\t        \t\t$timeout(function() {\r\n\t\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t\t      \t\t\t$scope.upload_init = 0;\r\n\t\t\t      \t\t}, 3000);\r\n\t        \t\t} else {\r\n\t        \t\t\t$scope.uploading_message = \"My apologies. An error has occured while the video is being uploaded. Please check if your internet connection is stable or contact our administrator/support. (Error code: \" + response.code + \")\";\r\n\t        \t\t}\r\n\t        \t});\r\n\r\n\t\t\t\t\t//Origin: Candidate application page, video questions\r\n\t\t\t\t\t} else if (origin == 'application') {\r\n\t\t\t\t\t\t// var apiurl = GlobalConstant.APIRoot+'candidate/videodoc/application_question';\r\n\t\t\t\t\t\t// angular.extend(data, {'user_agent_logs': useragent});\r\n\t\t\t\t     //    \tvar apidata = {\r\n\t\t\t\t     //    \t\tdata: data\r\n\t\t\t\t     //    \t} ;\r\n\r\n\t\t\t\t     //    \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata);\r\n\r\n\t        \tajaxService.postUpload(fileToUpload, 'video', '', useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\t        \t\t$timeout(function() {\r\n\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t      \t\t\t// $('.successUpload').hide();\r\n\t\t      \t\t}, 1000)\r\n\t        \t});\r\n\t        //Origin: Employer Edit Profile page.\r\n\t        } else if(origin == 'company_profile_edit') {\r\n\t        \tvar apiurl = GlobalConstant.APIRoot+'employer/videodoc/company_profile_video';\r\n\t        \tvar apidata = {data:{'filename': blobName, 'user_agent_logs': useragent}} ;\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, origin)\r\n\r\n\t        \tajaxService.postUpload(fileToUpload, 'video', '', '', useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\t        \t\t$timeout(function() {\r\n\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t      \t\t\t// $('.successUpload').hide();\r\n\t\t      \t\t}, 3000)\r\n\t        \t});\r\n\t        //Origin: Employer create job, Job description.\r\n\t        } else if(origin == 'employer_jobs') {\r\n\t        \tvar apiurl = GlobalConstant.APIRoot+'employer/job/videodoc/job_video';\r\n\t        \tvar apidata = {data:{'filename': blobName, 'job_id': parseInt(data), 'user_agent_logs': useragent }} ;\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, origin)\r\n\t        //Origin: Redo Video page\r\n\t        } else if(origin == 'redo_video') {\r\n\t        \tvar apiurl = GlobalConstant.APIRoot+'video/'+data+'/redo';\r\n\t        \tvar apidata = {data:{ 'user_agent_logs': useragent }} ;\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, 'redo_video')\r\n\r\n\t\t\t\t\t} else if(origin == 'ref_document_standard_question') {\r\n\t        \tvar apiurl = GlobalConstant.APIRoot+'employer/job/videodoc/application_question';\r\n\t        \tvar apidata = {data:{'filename': blobName, 'job_id': parseInt(data.job_id), 'user_agent_logs': useragent, 'question_id': data.question_id }};\r\n\r\n\t        \tajaxService.postUpload(fileToUpload, 'video', '', '', useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\t        \t\t$timeout(function() {\r\n\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t      \t\t}, 3000)\r\n\t        \t});\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, 'ref_document_standard_question');\r\n\t        } else if(origin == 'standard_question_answer') {\r\n\t        \t// var apiurl = GlobalConstant.CandidateRootApi + '/videodoc/application_question';\r\n\t        \t// var apidata = {data:{'filename': blobName, 'application_id': data.application_id, 'question_id': data.question_id }};\r\n\t        \t// this.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, 'standard_question_answer');\r\n\r\n\t        \tajaxService.postUpload(fileToUpload, 'video', data.application_id, data.question_id, useragent).then(function(response) {\r\n\t        \t// ajaxService.postUpload(fileToUpload, 'video', 123, data.question_id, useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"SQ answer fileToUploaded: \", response, $scope.preview_img);\r\n\t        \t\t$scope.upload_code = response.code;\r\n\r\n\t        \t\tif (response.success) {\r\n\t        \t\t\t$scope.uploading_message = \"Your video is now being prepared for publishing..\"\r\n\t\t        \t\t$scope.guid_response_sq_can = {\r\n\t\t\t    \t \t\t\t// guid: blobName, // changed to filename\r\n\t\t\t    \t \t\t\tquestion_id: data.question_id,\r\n\t\t\t    \t \t\t\tanswer_id: response.data.id\r\n\t\t\t    \t \t\t};\r\n\t\t\t    \t \t\t$scope.guid_response_sq_can.video_document = {\r\n\t\t\t    \t \t\t\tdoc_file_type:'',\r\n\t\t\t    \t \t\t\tdoc_filename: response.doc_filename,\r\n\t\t\t    \t \t\t\tdoc_url:'',\r\n\t\t\t    \t \t\t\tdoc_guid: response.id\r\n\t\t\t    \t \t\t};\r\n\t\t        \t\t$timeout(function() {\r\n\t\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t\t      \t\t\t// $('.successUpload').hide();\r\n\t\t\t      \t\t\t$scope.upload_init = 0;\r\n\t\t\t      \t\t}, 2000);\r\n\t        \t\t} else {\r\n\t        \t\t\t$scope.uploading_message = \"My apologies. An error has occured while the video is being uploaded. Please check if your internet connection is stable or contact our administrator/support. (Error code: \" + response.code + \")\";\r\n\t        \t\t}\r\n\t        \t});\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t//Use old video IF there are video function\tthat not updated to REST API.\r\n\t\t\t\t\t\tthis.video_upload_moli($scope, fileToUpload)\r\n\t\t\t\t\t}\r\n      \t}\r\n\t    },\r\n\t    AzureUploadResponseHandler : function($scope, data) {\r\n\t    \t// console.log(\"Azure handler: \", data, $scope);\r\n\t    \t//Set local storage for\r\n    \t \tlocalStorage.setItem('VideoUploadResponseData', JSON.stringify(data));\r\n\t    },\r\n\t    AzureVideoUploader : function($scope, file, apiURL, data, origin) {\r\n\t    \tconsole.log(\"Azure origin and API: \", file, apiURL, data, origin);\r\n\r\n\t    \tif (origin == 'ref_document_standard_question') { // initialize scope value, for SQ employer\r\n\t    \t\tvar guid_response_sq_emp = data.data;\r\n\t    \t\t// console.log(\"SQ CREATE: \", guid_response_sq_emp);\r\n\t    \t}\r\n\r\n\t    \t$scope.guid_response = \"\"; //reset upload success indicator;\r\n\t    \t$scope.guid_response_profile = \"\";\r\n\t    \tvar that = this;\r\n\t    \tif (angular.isUndefined(apiURL) || angular.isUndefined(data)) {\r\n\t    \t\t//console.log('API url and data not defined')\r\n\t    \t\treturn false;\r\n\t    \t}\r\n\r\n\t    \t//console.log(file)\r\n\t     \t// Provides a Stream for a file in webpage, inheriting from NodeJS Readable stream.\r\n\t\t    var Stream = require('stream');\r\n\t\t    var util = require('util');\r\n\t\t    var Buffer = require('buffer').Buffer;\r\n\r\n\t\t    function FileStream(file, opt) {\r\n\t\t    \tconsole.log(\"FileStream: \", file, opt);\r\n\t\t      Stream.Readable.call(this, opt);\r\n\t\t      this.fileReader = new FileReader(file);\r\n\t\t      this.file = file;\r\n\t\t      this.size = file.size;\r\n\t\t      this.chunkSize = 1024 * 1024 * 4; // 4MB\r\n\t\t      this.offset = 0;\r\n\t\t      var _me = this;\r\n\r\n\t\t      this.fileReader.onloadend = function loaded(event) {\r\n\t\t        var data = event.target.result;\r\n\t\t        var buf = Buffer.from(data);\r\n\t\t        _me.push(buf);\r\n\t\t      }\r\n\t\t    }\r\n\r\n\t\t    util.inherits(FileStream, Stream.Readable);\r\n\t\t    FileStream.prototype._read = function() {\r\n\t\t    \tconsole.log(\"damn son\");\r\n\t\t      if (this.offset > this.size) {\r\n\t\t        this.push(null);\r\n\t\t      } else {\r\n\t\t        var end = this.offset + this.chunkSize;\r\n\t\t        var slice = this.file.slice(this.offset, end);\r\n\t\t        this.fileReader.readAsArrayBuffer(slice);\r\n\t\t        this.offset = end;\r\n\t\t      }\r\n\t\t    }\r\n\r\n\t\t    var fileToUpload = file;\r\n\t\t    var d = new Date();\r\n        var n = d.getTime();\r\n        var splitFilename = fileToUpload.name.split('.');\r\n        var fileExt =  splitFilename[splitFilename.length-1] ;\r\n\r\n        var blobName = n + '_' + fileToUpload.name.replace(/[^a-z0-9\\s]/gi, \"\").replace(/[_\\s]/g, '-')+ '.'+fileExt;\r\n        var containerName = $cookies.get('obkey');\r\n\r\n\t\t    $('.errorUpload').hide();\r\n \t\t\t\t$('#pmvCameraModalNew  .preparing').show();\r\n \t\t\t\tthat.buttonsHideShow($scope, true,true,true,true,true);\r\n\r\n\t\t\t  //get SAS URL from PvM API\r\n\t\t\t  console.log(\"before submit AzureUpload: \", data);\r\n\t    \t$http.post(apiURL,  data)\r\n\t    \t.then(function(response) {\r\n\t    \t \t//connected to api\r\n\t    \t \t$('#pmvCameraModalNew  .preparing').hide();\r\n\r\n\t    \t \t// console.log(\"GUID: \", response);\r\n\t    \t \tvar icebreakerguid = response.data.data.guid;\r\n\r\n\t    \t \tif (origin == 'candidate_profile_edit' || origin == 'employer_jobs') {\r\n\t    \t \t\t$scope.guid_response_profile = icebreakerguid;\r\n\t    \t \t\t$cookies.put('icebreakerguid', icebreakerguid, {'path':'/' });\r\n\t    \t \t}\r\n\r\n\t    \t \tif (origin == 'ref_document_standard_question') {\r\n\t    \t \t\t$scope.const_video = guid_response_sq_emp;\r\n\t    \t \t\t$scope.const_video.video_document = {\r\n\t    \t \t\t\tdoc_file_type:'',\r\n\t    \t \t\t\tdoc_filename: guid_response_sq_emp.filename,\r\n\t    \t \t\t\tdoc_url:'',\r\n\t    \t \t\t\tdoc_guid: icebreakerguid\r\n\t    \t \t\t};\r\n\r\n\t    \t \t\t$scope.guid_response_sq_emp = $scope.const_video;\r\n\r\n\t    \t \t\t// $scope.guid_response = icebreakerguid; // Role Appplication $scope?\r\n\t    \t \t\t// console.log('ref_document_standard_question', $scope.guid_response_sq_emp);\r\n\t    \t \t}\r\n\r\n\t\t\t\t\tif (origin == 'standard_question_answer') {\r\n\t    \t \t\t$scope.guid_response_sq_can = {\r\n\t    \t \t\t\t// guid: blobName, // changed to filename\r\n\t    \t \t\t\tquestion_id: data.data.question_id\r\n\t    \t \t\t};\r\n\t    \t \t\t$scope.guid_response_sq_can.video_document = {\r\n\t    \t \t\t\tdoc_file_type:'',\r\n\t    \t \t\t\tdoc_filename: data.data.filename,\r\n\t    \t \t\t\tdoc_url:'',\r\n\t    \t \t\t\tdoc_guid: icebreakerguid\r\n\t    \t \t\t};\r\n\t    \t \t}\r\n\r\n\t    \t \t//Set local storage for\r\n\t    \t \tlocalStorage.setItem('icebreakerguid',icebreakerguid);\r\n\t    \t \tvar path = response.data.data.sas_url.split('?');\r\n\t    \t \tvar sasKey = path[1];\r\n\t    \t \tvar path2 = path[0].split('/');\r\n\t    \t \t// var blobStorageUri = 'https://'+path2[2];\r\n\r\n\t    \t \tvar blobStorageUri = path2[2];\r\n\r\n\t    \t \t//var containerName = $cookies.get('obkey');\r\n\t    \t \tvar containerName = path2[3]\r\n\t    \t \t//console.log(containerName)\r\n\t    \t \tvar fileReader = new FileReader();\r\n    \t\t\tfileReader.readAsArrayBuffer(file);\r\n\r\n\t    \t\t//Uploading file\r\n\t    \t\tvar blobService = AzureStorage.createBlobServiceWithSas(blobStorageUri, sasKey).withFilter(new AzureStorage.ExponentialRetryPolicyFilter());\r\n\r\n\t    \t\t//File uploaded\r\n\t    \t\tif (!blobService)\r\n      \t\treturn;\r\n\r\n      \t\t$('#pmvCameraModalNew .progressContainer').show();\r\n      \t\t//connected to api\r\n\t    \t \t$scope.preparing = false;\r\n\r\n      \t\tvar fileStream = new FileStream(file);\r\n\t\t\t    // Make a smaller block size when uploading small blobs\r\n\t\t\t    var blockSize = file.size > 1024 * 1024 * 32 ? 1024 * 1024 * 4 : 1024 * 512;\r\n\t\t\t    var options = {\r\n\t\t\t      storeBlobContentMD5: false,\r\n\t\t\t      blockSize: blockSize\r\n\t\t\t    };\r\n\r\n\t\t\t    //console.log(options)\r\n\t\t\t    //console.log(blobService)\r\n\t\t\t    blobService.singleBlobPutThresholdInBytes = blockSize;\r\n    \t\t\tvar finishedOrError = false;\r\n    \t\t\tvar speedSummary = blobService.createBlockBlobFromStream(containerName, blobName, fileStream, file.size, options,\r\n\t\t      function (error, result, response) {\r\n\t\t        finishedOrError = true;\r\n\t\t        if (error) {\r\n\t\t          $scope.uploaderror = true;\r\n\t\t          $scope.errorMsg = 'Sorry, it looks like your internet connection dropped out, can you try uploading again';\r\n\t\t          $('.errorUpload').show();\r\n\t\t          $('.errorUpload .text span').html($scope.errorMsg)\r\n\t\t        } else {\r\n\t\t        \t$('.finalize').show();\r\n\t\t        \t$('.progressContainer').hide();\r\n\t\t        \t//Not sure what this is but karan said to put it here\r\n\t\t        \t$http.put(GlobalConstant.APIRoot+'video/'+icebreakerguid+'/uploaded',  {data:{'filename': blobName}})\r\n\t\t        \t.then(function(response) {\r\n\t\t        \t\t$('.finalize').hide();\r\n\t\t        \t\t$('.successUpload').show();\r\n\t\t          \t$('.progressContainer').hide();\r\n\r\n\t\t          \t// console.log(\"upload Azure media response: \", response);\r\n\t\t          \tif (response.status == 204) {\r\n\t\t          \t\tthat.AzureUploadResponseHandler ($scope, data);\r\n\t\t          \t\tthat.buttonsHideShow($scope, true,true,true,true,false);\r\n\r\n\r\n\t\t          \t\tif (origin == 'candidate_profile_edit') {\r\n\t\t\t\t\t    \t \t\t$scope.app_video_uploaded_success = 1;\r\n\t\t\t\t\t    \t \t}\r\n\r\n\t\t          \t\t// console.log(\"success: \", that);\r\n\t\t          \t\t// console.log(\"UPLOAD PROFIL PIC ORIGIN: \", origin);\r\n\r\n\t\t          \t\t$timeout(function() {\r\n\t\t          \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t          \t\t\t$('.successUpload').hide();\r\n\t\t          \t\t}, 3000)\r\n\t\t          \t} else {\r\n\t\t          \t\t// console.log(\"Something went wong \", response);\r\n\t\t          \t}\r\n\t\t        \t});\r\n\t\t        }\r\n\t\t      });\r\n\r\n\t\t\t    function refreshProgress () {\r\n\t\t\t      $timeout(function () {\r\n\t\t\t        if (!finishedOrError) {\r\n\t\t\t          var process = speedSummary.getCompletePercent();\r\n\r\n\t\t\t          //Create Progress bar using the variables below.\r\n\t\t\t          $scope.dynamic = Math.min(100, parseInt(process));\r\n\t\t\t          $scope.fileloader = false;\r\n\r\n\t\t\t          $('#pmvCameraModalNew .progressbar span').html($scope.dynamic + '%');\r\n\t\t\t          $('#pmvCameraModalNew .progressbar').css('width',  $scope.dynamic + '%')\r\n\t\t\t          if ($scope.dynamic == 100) {\r\n\t\t\t          \t$('#pmvCameraModalNew .progressContainer').hide()\r\n\t\t\t          }\r\n\t\t\t          //console.log($scope.dynamic)\r\n\t\t\t          refreshProgress();\r\n\t\t\t        }\r\n\t\t\t      }, 200);\r\n\t\t\t    }\r\n\r\n\t\t\t    refreshProgress();\r\n\t\t\t\t},function(response) {\r\n\t\t\t\t\t//Check if there is a specified origin to pass error messages\r\n\t\t\t\t\tif (angular.isDefined(origin) ) {\r\n\t\t\t\t\t\t//console.log('defined origin')\r\n\t\t\t\t\t\tif (origin == 'redo_video' && response.status == 500) {\r\n\t\t\t\t\t\t\t$('.preparing').hide()\r\n\t\t\t\t\t\t\t$('.errorUpload').show();\r\n\t\t\t\t\t\t\t$('.errorUpload .text span').html('guid is either removed or invalid')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n        });\r\n\t    },\r\n\r\n     \t//Save Recoded video\r\n\t    saveVideo : function($scope, origin, data) {\r\n\t    \tconsole.log(\"RECORD VIDEO: \", data, origin);\r\n\t    \t$scope.uploading_message = \"\";\r\n\t    \t$scope.uploading_message = \"Please wait..\";\r\n\t    \t$scope.upload_init = 1;\r\n\t    \t$scope.upload_code = 0;\r\n\t    \t$scope.guid_response_profile = false;\r\n\r\n\t\t\t\tvar save_btn = $('#save_btn');\r\n\t\t\t\tvar ob_key = $cookies.get('obkey');\r\n\t\t\t\tvar folder_type = save_btn.attr('data-save_type');\r\n\t\t\t\tvar doc_type = 'icebreaker_video';\r\n\t\t\t\tif($scope.doc_type) {\r\n\t\t\t\t \tdoc_type = $scope.doc_type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.log(\"folder_type: \", folder_type);\r\n\r\n\t\t\t\tif (folder_type == 'camera') {\r\n\t\t\t\t\t// show percent\r\n\t\t\t\t\t// if ($('#modal_percent').hasClass('hidden')) {\r\n\t\t\t\t\t//    $('#modal_percent').removeClass('hidden')\r\n\t\t\t\t\t// }\r\n\t\t\t\t \tfilename = save_btn.attr('data-recorded');\r\n\t\t\t\t\tif (!filename) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(\"recorded vid filename: \", filename);\r\n\t\t\t\t\tvar useragent = $window.navigator.userAgent;\r\n\t\t\t\t\t//$scope.modal_percent = false;\r\n\t\t\t\t\t// New video upload process\r\n\t\t\t\t\tvar videoblob = $scope.recordVideoSteam.getBlob();\r\n\t\t\t\t\tvar fileToUpload = new File([videoblob], filename, {type: 'video/mp4', lastModified: Date.now()});\r\n\r\n\t\t\t\t\tconsole.log(\"recorded videoblob: \". videoblob);\r\n\t\t\t\t\tconsole.log(\"recroded filetoupload: \", fileToUpload);\r\n\r\n\t\t\t\t\tif (origin == 'candidate_profile_edit') {\r\n\t\t\t\t\t\t// var apiurl = GlobalConstant.APIRoot+'candidate/upload/video';\r\n\t        \t// var apiurl = GlobalConstant.APIRoot+'candidate/videodoc/icebreaker_video';\r\n\t        \t// var data = {data:{'filename': filename, 'user_agent_logs': useragent }};\r\n\t        \t// this.AzureVideoUploader($scope, fileToUpload, apiurl, data, origin)\r\n\r\n\t        \t// New Arch BEGIN\r\n\t        \tajaxService.postUpload(fileToUpload, 'video', '', '', useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\r\n\t        \t\tif (response.success) {\r\n\t        \t\t\t$scope.preview_img = \"loading\";\r\n\t        \t\t\t$scope.guid_response_profile = response.success;\r\n\t        \t\t\t$scope.uploading_message = \"Your video is now being prepared for publishing..\"\r\n\t\t        \t\t$timeout(function() {\r\n\t\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t\t      \t\t\t$scope.upload_init = 0;\r\n\t\t\t      \t\t}, 3000);\r\n\t        \t\t} else {\r\n\t        \t\t\t$scope.uploading_message = \"My apologies. An error has occured while the video is being uploaded. Please check if your internet connection is stable or contact our administrator/support. (Error code: \" + response.code + \")\";\r\n\t        \t\t}\r\n\t        \t});\r\n\t        \t// New Arch BEGIN\r\n\t\t\t\t\t} else if (origin == 'application') {\r\n\t\t\t\t\t\tvar apiurl = GlobalConstant.APIRoot+'candidate/videodoc/application_question';\r\n\t\t\t\t\t\tangular.extend(data, {'user_agent_logs': useragent })\r\n\t        \tvar data = {\r\n\t        \t\tdata: data\r\n\t        \t};\r\n\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, data, origin)\r\n\t        } else if(origin == 'company_profile_edit') {\r\n\t\t\t\t\t\tvar apiurl = GlobalConstant.APIRoot+'employer/videodoc/company_profile_video';\r\n\t        \tvar data = {data:{'filename': filename, 'user_agent_logs': useragent }} ;\r\n\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, data, origin)\r\n\t        //Origin: Employer create job, Job description.\r\n\r\n\t        \t// ajaxService.postUpload(fileToUpload, 'video', '', '', useragent).then(function(response) {\r\n\t        \t// \tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\t        \t// \t$timeout(function() {\r\n\t\t      \t\t// \t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t      \t\t// \t// $('.successUpload').hide();\r\n\t\t      \t\t// }, 2000)\r\n\t        \t// });\r\n\t        } else if(origin == 'employer_jobs') {\r\n\t        \tvar apiurl = GlobalConstant.APIRoot+'employer/job/videodoc/job_video';\r\n\t        \tvar apidata = {data:{'filename': filename, 'job_id': parseInt(data) , 'user_agent_logs': useragent }} ;\r\n\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, origin);\r\n\t        //Origin: Redo video page\r\n\t        } else if(origin == 'redo_video') {\r\n\t        \tvar apiurl = GlobalConstant.APIRoot+'video/'+data+'/redo';\r\n\t        \tvar apidata = {data:{ 'user_agent_logs': useragent  }} ;\r\n\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, 'redo_video');\r\n\t\t\t\t\t} else if(origin == 'ref_document_standard_question') {\r\n\t        \tvar apiurl = GlobalConstant.APIRoot+'employer/job/videodoc/application_question';\r\n\t        \tvar apidata = {data:{'filename': filename, 'job_id': parseInt(data.job_id), 'user_agent_logs': useragent, 'question_id': data.question_id }};\r\n\t        \tthis.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, origin)\r\n\r\n\t        \tajaxService.postUpload(fileToUpload, 'video', '', '', useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\t        \t\t$timeout(function() {\r\n\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t      \t\t\t// $('.successUpload').hide();\r\n\t\t      \t\t}, 2000);\r\n\t        \t});\r\n\t\t\t\t\t} else if(origin == 'standard_question_answer') {\r\n\t        \t// var apiurl = GlobalConstant.CandidateRootApi + '/videodoc/application_question';\r\n\t        \t// var apidata = {data:{'filename': filename, 'application_id': data.application_id, 'question_id': data.question_id }};\r\n\r\n        \t\t// this.AzureVideoUploader($scope, fileToUpload, apiurl, apidata, 'standard_question_answer');\r\n\r\n        \t\tajaxService.postUpload(fileToUpload, 'video', data.application_id, data.question_id, useragent).then(function(response) {\r\n\t        \t\tconsole.log(\"fileToUploaded: \", response, $scope.preview_img);\r\n\r\n\t        \t\tif (response.success) {\r\n\t\t\t      \t\t$scope.uploading_message = \"Your video is now being prepared for publishing..\"\r\n\t\t        \t\t$scope.guid_response_sq_can = {\r\n\t\t\t    \t \t\t\t// guid: blobName, // changed to filename\r\n\t\t\t    \t \t\t\tquestion_id: data.question_id,\r\n\t\t\t    \t \t\t\tanswer_id: response.data.id\r\n\t\t\t    \t \t\t};\r\n\t\t\t    \t \t\t$scope.guid_response_sq_can.video_document = {\r\n\t\t\t    \t \t\t\tdoc_file_type:'',\r\n\t\t\t    \t \t\t\tdoc_filename: response.doc_filename,\r\n\t\t\t    \t \t\t\tdoc_url:'',\r\n\t\t\t    \t \t\t\tdoc_guid: response.id\r\n\t\t\t    \t \t\t};\r\n\t\t        \t\t$timeout(function() {\r\n\t\t\t      \t\t\t$('#pmvCameraModalNew .close').trigger('click');\r\n\t\t\t      \t\t\t// $('.successUpload').hide();\r\n\t\t\t      \t\t\t$scope.upload_init = 0;\r\n\t\t\t      \t\t}, 2000);\r\n\r\n\t        \t\t} else {\r\n\t        \t\t\t$scope.uploading_message = \"My apologies. An error has occured while the video is being uploaded. Please check if your internet connection is stable or contact our administrator/support. (Error code: \" + response.code + \")\";\r\n\t        \t\t}\r\n\t        \t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.PostBlob($scope, $scope.recordAudio.getBlob(), $scope.recordVideoSteam.getBlob(), filename);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false\r\n\t\t\t\t // Save Uploaded Video\r\n\t\t\t\t} else if (folder_type == 'video') {\r\n\t\t\t\t\t// Browser not Safari\r\n\t\t\t\t\tif($scope.isSafari == false) {\r\n\t\t\t\t\t\tvar fileField = document.getElementById(\"video_upload_modal_new\");\r\n\t\t\t\t\t\tvar filename = $('#preview_new').attr('src');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Safari Browser\r\n\t\t\t\t\t\tvar fileField = document.getElementById(\"video_upload_modal_new_safari\");\r\n\t\t\t\t\t\tvar filename = $scope.video_source;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar fileLastIndex = filename.lastIndexOf('/') + 1;\r\n\t\t\t\t\t filename = filename.substr(fileLastIndex);\r\n\r\n\t\t\t\t\tif (!filename) {\r\n\t\t\t\t\t  return false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar data = {\r\n\t\t\t\t    filename: filename,\r\n\t\t\t\t    doc_type: doc_type,\r\n\t\t\t\t    token_id: $cookies.get('token_id'),\r\n\t\t\t\t    user_type : $cookies.get('ut')\r\n\t\t\t\t  };\r\n\r\n\t\t\t\t\tif($scope.question_id) {\r\n\t\t\t\t\t\tdata.question_id = $scope.question_id;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$.ajax({\r\n\t\t\t\t   \turl: GlobalConstant.FileUploadUrl + '/save_uploaded_file',\r\n\t\t\t\t   \ttype: 'post',\r\n\t\t\t    \t\tcache : false,\r\n\t\t\t\t   \tdata: data,\r\n\t\t\t\t   \tsuccess: function(data) {\r\n\t\t\t\t\t    if (data) {\r\n\t\t\t\t\t     \tif($scope.nextStep == 'application_questions') {\r\n\t\t        \t\t \talert('Your video is being processed, You can click on continue to finish your application')\r\n\t\t\t        \t} else {\r\n\t\t        \t\t \talert('Your video is currently being processed. You can keep browsing the website while it is loading.')\r\n\t\t\t        \t}\r\n\t\t\t\t\t       $('#pmvCameraModalNew').modal('hide');\r\n\t\t\t\t\t    } else {\r\n\t\t\t\t\t      alert('Internal error.');\r\n\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    fileField.value = \"\";\r\n\r\n\t\t\t\t     \t// \"job/application page\", in APPICATION QUESTIONS STEP,\r\n\t\t\t\t     \t// put value on this, to pass the validation on continue button\r\n\t            if($scope.doc_type == 'question' && $scope.appQuestion) {\r\n\t\t\t           \t$scope.appQuestion.answer[$scope.question_id] = true;\r\n\t\t\t           \t$scope.last_id = data;\r\n\t\t           // Employer crete role\r\n\t\t           } else if($scope.doc_type == 'create role') {\r\n\t\t           \t$scope.last_id = data;\r\n\t\t           }\r\n\t\t\t\t\t   }\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n    \t},\r\n\r\n\t\t  mobile_video_upload : function($scope) {\r\n\t\t\t\tvar fileField = document.getElementById(\"mobile_video_upload\");\r\n\t\t    var fileToUpload = fileField.files[0];\r\n\t\t    var ob_key = $cookies.get('obkey');\r\n\t\t    var d = new Date();\r\n\t\t    var n = d.getTime();\r\n\t\t    var filename = n + '_' + fileToUpload.name;\r\n\t\t    var allowed_files = ['mp4', 'wma', 'mpg', 'mpeg', 'wmv', 'avi', 'mov'];\r\n\t\t    var last_dot = filename.lastIndexOf('.');\r\n\t\t    var ext = filename.substr(last_dot + 1).toLowerCase();\r\n\r\n\t\t    if (allowed_files.indexOf(ext) == -1) {\r\n\t\t    alert(\"Invalid Video file must be 'mp4','wma','mpg','mpeg','wav','avi' extension\");\r\n\t\t    \treturn false;\r\n\t\t    }\r\n\r\n\t\t    var chunksize = 1000000 // 1MB\r\n\t\t    var chunks = Math.ceil(chunksize / fileToUpload.size);\r\n\t\t    chunks = chunks > 1 ? 1 : chunks;\r\n\r\n\t\t    if ($('#video_progress').hasClass('ng-hide')) {\r\n\t\t    \t$('#video_progress').removeClass('ng-hide');\r\n\t\t    }\r\n\r\n\t\t\t  var uploadChunk = function(fileToUpload, chunk) {\r\n\t\t\t    var xhr = new XMLHttpRequest();\r\n\t\t\t    var uploadStatus = xhr.upload;\r\n\r\n\t\t\t    uploadStatus.addEventListener(\"progress\", function(ev) {\r\n\t\t\t      if (ev.lengthComputable) {\r\n\t\t\t\t      var percent = Math.ceil((ev.loaded / ev.total) * 100);\r\n\t\t\t\t      $scope.progressValue = percent;\r\n\t\t\t      }\r\n\t\t\t    }, false);\r\n\r\n\t\t\t    uploadStatus.addEventListener(\"error\", function(ev) {\r\n\t\t\t      $(\"#error\").html(ev)\r\n\t\t\t    }, false);\r\n\t\t\t    uploadStatus.addEventListener(\"load\", function(ev) {\r\n\t\t\t      $(\"#error\").html(\"uploading file to server, please wait...\")\r\n\t\t\t    }, false);\r\n\r\n\t\t\t    xhr.addEventListener('readystatechange', function(e) {\r\n\t\t\t      if (this.readyState === 4) {\r\n\t\t\t\t      $.ajax({\r\n\t\t\t\t        url: GlobalConstant.FileUploadUrl + '/save_uploaded_file',\r\n\t\t\t\t        type: 'post',\r\n\t\t\t\t        data: {\r\n\t\t\t\t\t        filename: filename,\r\n\t\t\t\t\t        doc_type: 'icebreaker_video',\r\n\t\t\t\t\t        ob_key: ob_key,\r\n\t\t\t\t\t        token_id: $cookies.get('token_id')\r\n\t\t\t\t        },\r\n\t\t\t\t        success: function(data) {\r\n\t\t\t\t\t        if (data) {\r\n\t\t\t\t\t          $scope.progressValue = 0;\r\n\t\t\t\t\t          $('#video_progress').addClass('ng-hide');\r\n\t\t\t\t\t          $('#video_placeholder').attr('src', 'themes/bbt/images/placeholder_encoding.png');\r\n\t\t\t\t\t          if($scope.nextStep == 'application_questions') {\r\n\t\t\t\t\t\t\t \t\t\t\talert('Your video is being processed, You can click on continue to finish your application')\r\n\t\t\t\t\t        \t} else {\r\n\t\t\t\t\t      \t\t \talert('Your video is currently being processed. You can keep browsing the website while it is loading.')\r\n\t\t\t\t\t        \t}\r\n\t\t\t\t\t        } else {\r\n\t\t\t\t\t          alert('Internal error.');\r\n\t\t\t\t\t        }\r\n\t\t\t\t\t        fileField.value = \"\";\r\n\t\t\t\t        }\r\n\t\t\t\t      });\r\n\t\t\t    \t}\r\n\t\t    \t});\r\n\r\n\t\t\t    var start = chunksize * chunk;\r\n\t\t\t    var end = start + (chunksize - 1)\r\n\t\t\t    if (end >= fileToUpload.size) {\r\n\t\t\t      end = fileToUpload.size - 1;\r\n\t\t\t    }\r\n\t\t\t    var params = '?file_folder=video';\r\n\t\t\t    xhr.open(\"POST\", GlobalConstant.FileUploadUrl + \"/video_upload_submit\" + params, true);\r\n\t\t\t    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n\t\t\t    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n\t\t\t    // xhr.setRequestHeader(\"Content-Type\", \"multipart/form-data\");\r\n\t\t\t    // xhr.setRequestHeader(\"content-type\",\"multipart/form-data; charset=utf-8; boundary=\" + Math.random().toString().substr(2));\r\n\t\t\t    xhr.setRequestHeader(\"X-File-Name\", filename);\r\n\t\t\t    xhr.setRequestHeader(\"X-File-Size\", fileToUpload.size);\r\n\t\t\t    xhr.setRequestHeader(\"X-File-Type\", fileToUpload.type);\r\n\t\t\t    xhr.setRequestHeader(\"Content-Range\", start + \"-\" + end + \"/\" + fileToUpload.size);\r\n\t\t\t    xhr.send(fileToUpload);\r\n\t\t\t  }\r\n\r\n\t\t    for (var c = 0; c < chunks; c++) {\r\n\t\t    \tuploadChunk(fileToUpload, c);\r\n\t\t    }\r\n\t  \t},\r\n\r\n\t    startVideo : function($scope) {\r\n\t\t\t\tthis.sectionsHideShow($scope, true, false);\r\n      \tthis.buttonsHideShow($scope, true,true,true,false,false);\r\n\t      if ($('#preview_new').attr('src')) {\r\n\t        $('#preview_new').attr('src', '');\r\n\t        window.stream = '';\r\n\t      }\r\n\r\n\t      !window.stream && navigator.getUserMedia({\r\n\t        audio: true,\r\n\t        video: true\r\n\t      }, function(stream) {\r\n\t        window.stream = stream;\r\n\t        if(preview_new.length) {\r\n        \t \tpreview_new[0].src = window.URL.createObjectURL(stream);\r\n\t        \t//preview_new[0].play();\r\n\t        \tpreview_new[0].pause();\r\n\t        } else {\r\n        \t \tpreview_new.src = window.URL.createObjectURL(stream);\r\n\t        \t//preview_new.play();\r\n\t        \tpreview_new.pause();\r\n\t        }\r\n\t        return 1;\r\n\t      }, function(error) {\r\n\t        alert(JSON.stringify(error, null, '\\t'));\r\n\t        return 0;\r\n\t      });\r\n\r\n\t       this.buttonsHideShow($scope, false,true,true,true,true);\r\n\r\n\t    },\r\n\r\n\t    recordVideo : function($scope) {\r\n    \t \tvar onstream = function() {\r\n    \t \t\tif(preview_new.length) {\r\n        \t \tpreview_new[0].src = window.URL.createObjectURL(stream);\r\n\t        \tpreview_new[0].play();\r\n\t        \t// preview_new[0].muted = false;\r\n\t        } else {\r\n      \t \t \tpreview_new.src = window.URL.createObjectURL(stream);\r\n      \t\t\tpreview_new.play();\r\n\t        \t// preview_new.muted = false;\r\n\t        }\r\n\r\n\t        $scope.recordAudio = RecordRTC(stream, {\r\n\t          // bufferSize: 16384,\r\n\t          onAudioProcessStarted: function() {\r\n\t            // if (!isFirefox) {\r\n\t            $scope.recordVideoSteam.startRecording();\r\n\t            //   }\r\n\t          }\r\n\t        });\r\n\r\n\t        $scope.recordVideoSteam = RecordRTC(stream, {\r\n\t          type: 'video'\r\n\t        });\r\n\r\n        \t$scope.recordAudio.startRecording();\r\n      \t}\r\n\t      !window.stream && navigator.getUserMedia({\r\n\t        audio: true,\r\n\t        video: true\r\n\t      }, function(stream) {\r\n\t        window.stream = stream;\r\n\t        onstream();\r\n\t      }, function(error) {\r\n\t        alert(JSON.stringify(error, null, '\\t'));\r\n\t      });\r\n\r\n\t      window.stream && onstream();\r\n\t      this.buttonsHideShow($scope, true,true,false,true,true);\r\n\t    },\r\n\r\n\t    stopVideo : function($scope) {\r\n\t      $('#save_btn').attr('data-save_type', 'camera');\r\n\t      var fileName = Math.round(Math.random() * 99999999) + 99999999;\r\n\t      fileName = 'camera_' + fileName + '.mp4';\r\n\t      $('#save_btn').attr('data-recorded', fileName);\r\n\t      // reset percent to 0\r\n\t      $scope.modal_percent_value = 0;\r\n\r\n\t      $scope.recordAudio.stopRecording(function(audioUrl) {\r\n\t        if(preview_new.length) {\r\n\t        \tpreview_new[0].src = audioUrl;\r\n\t        } else {\r\n\t        \tpreview_new.src = audioUrl;\r\n\t        }\r\n\r\n\t        $scope.recordVideoSteam.stopRecording(function(videoUrl) {\r\n\t        \tif(preview_new.length) {\r\n\t        \t\tpreview_new[0].muted = false;\r\n\t        \t} else {\r\n\t        \t\tpreview_new.muted = false;\r\n\t        \t}\r\n\t\t\t\t\t\tstream.stop();\r\n\t\t\t\t\t\twindow.stream = '';\r\n\t        });\r\n\t      });\r\n\r\n\t      this.buttonsHideShow($scope, true,false,true,false,true);\r\n\t    },\r\n\r\n     \tvideoUpload : function($scope, file_elm, evt) {\r\n        \tvar fileField = document.getElementById(file_elm);\r\n\t        $scope.modal_percent_value = 0;\r\n\t        // Drag/Drop upload\r\n\t        if (evt) {\r\n\t          fileField = evt.dataTransfer;\r\n\t        }\r\n\r\n\t        // delete old upload video\r\n\t        if ($('#preview_new').attr('data-old_file')) {\r\n\t          var filename = $('#preview_new').attr('data-old_file');\r\n\t          var folder = $('#preview_new').attr('data-file_folder');\r\n\t          $scope.delete_old_file(filename, folder);\r\n\t        }\r\n\r\n\t        var fileToUpload = fileField.files[0];\r\n\t        var ob_key = $cookies.get('obkey');\r\n\t        var d = new Date();\r\n\t        var n = d.getTime();\r\n\t        var filename = n + '_' + fileToUpload.name;\r\n\t        var upload_folder = 'Video';\r\n\r\n\t        if ($scope.mobile_agent) {\r\n\t          filename = 'camera_' + filename;\r\n\t          upload_folder = 'Camera';\r\n\t          // $('#mobile_camera_capture').attr('data-old_file', filename);\r\n\t        } else {\r\n\t          // $('#Form_video_upload_modal').attr('data-old_file', filename);\r\n\t        }\r\n\r\n\t        var allowed_files = ['mp4', 'wma', 'mpg', 'mpeg', 'wmv', 'avi', 'mov'];\r\n\t        var last_dot = filename.lastIndexOf('.');\r\n\t        var ext = filename.substr(last_dot + 1).toLowerCase();\r\n\r\n\t        if (allowed_files.indexOf(ext) == -1) {\r\n\t          alert(\"Invalid Video file must be 'mp4','wma','mpg','mpeg','wav','avi' extension\");\r\n\t          return false;\r\n\t        }\r\n\r\n\t        var oneMb = 1048576;\r\n\t        var videoSizeLimit = 150;\r\n\t        if(Math.ceil(fileToUpload.size / oneMb) > videoSizeLimit) {\r\n\t          alert('Max video limit must be '+videoSizeLimit+'mb in size.');\r\n\t          return false;\r\n\t        }\r\n\r\n\r\n\t        var chunksize = 1000000 // 1MB\r\n\t        var chunks = Math.ceil(chunksize / fileToUpload.size);\r\n\t        chunks = chunks > 1 ? 1 : chunks;\r\n\t        preview_new.src = '';\r\n\t        preview_new.poster = '';\r\n\t        // show percent;\r\n\t        $scope.modal_percent = false;\r\n\r\n\t        if ($('#modal_percent').hasClass('hidden')) {\r\n\t          $('#modal_percent').removeClass('hidden');\r\n\t        }\r\n\r\n        \tvar uploadChunk = function(fileToUpload, chunk) {\r\n          \tvar xhr = new XMLHttpRequest();\r\n          \tvar uploadStatus = xhr.upload;\r\n          \tuploadStatus.addEventListener(\"progress\", function(ev) {\r\n\t            if (ev.lengthComputable) {\r\n\t              // Percent progress\r\n\t              $scope.modal_percent_value = Math.ceil((ev.loaded / ev.total) * 100);\r\n\t            }\r\n            }, false);\r\n\r\n\t          xhr.addEventListener('readystatechange', function(e) {\r\n\t            if (this.readyState === 4) {\r\n\t              var rewrite_filename = filename.split(' ');\r\n\t              rewrite_filename = rewrite_filename.join('_');\r\n\t              preview_new.src = 'assets/Uploads/' + upload_folder + '/' + rewrite_filename;\r\n\r\n\t              if($scope.isSafari == false) {\r\n\t                preview_new.play();\r\n\t                preview_new.muted = false;\r\n\t              }\r\n\r\n\t              $('#save_btn').attr('data-save_type', 'video');\r\n\t              $('#preview_new').attr('data-old_file', rewrite_filename);\r\n\t              $('#preview_new').attr('data-file_folder', upload_folder);\r\n\r\n\t              if($scope.isSafari == false) {\r\n\t                $scope.sectionsHideShow(true, false);\r\n\t                $scope.buttonsHideShow(true, true, true, false, false);\r\n\t              } else {\r\n\t                $scope.video_source = preview_new.src;\r\n\t                $scope.saveVideo();\r\n\t              }\r\n\t              // hide percent\r\n\t              $scope.modal_percent = true;\r\n\t            }\r\n\t        \t});\r\n\r\n\t          var start = chunksize * chunk;\r\n\t          var end = start + (chunksize - 1)\r\n\t          if (end >= fileToUpload.size) {\r\n\t            end = fileToUpload.size - 1;\r\n\t          }\r\n\t          var params = '?file_folder=' + upload_folder;\r\n\t          // console.log(GlobalConstant.FileUploadUrl + \"/video_upload_submit\" + params);\r\n\t          // xhr.open(\"POST\", GlobalConstant.accountPage + \"/video_upload_submit\" + params, true);\r\n\t          xhr.open(\"POST\", GlobalConstant.FileUploadUrl + \"/video_upload_submit\" + params, true);\r\n\t          xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n\t          xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n\r\n\t          xhr.setRequestHeader(\"X-File-Name\", filename);\r\n\t          xhr.setRequestHeader(\"X-File-Size\", fileToUpload.size);\r\n\t          xhr.setRequestHeader(\"X-File-Type\", fileToUpload.type);\r\n\t          xhr.setRequestHeader(\"Content-Range\", start + \"-\" + end + \"/\" + fileToUpload.size);\r\n\t          xhr.send(fileToUpload);\r\n      \t}\r\n\r\n        for (var c = 0; c < chunks; c++) {\r\n          uploadChunk(fileToUpload, c);\r\n        }\r\n      },\r\n\r\n\t    changeVideo : function($scope) {\r\n\t    \t// $scope.hidePreview();\r\n\t\t\t\tthis.sectionsHideShow($scope, false,true);\r\n\t\t\t\tthis.buttonsHideShow($scope, false,false,false,false,false);\r\n\r\n\t\t\t\tif ($('#preview_new').attr('data-old_file')) {\r\n\t\t\t\t\tvar filename = $('#preview_new').attr('data-old_file');\r\n\t\t\t\t\tvar folder = $('#preview_new').attr('data-file_folder');\r\n\t\t\t\t\tthis.delete_old_file(filename, folder);\r\n\t\t\t\t\t$('#preview_new').attr('src', '');\r\n\t\t\t\t} else if($('#preview_img_new').attr('data-old_file')) {\r\n\t\t\t\t\tvar filename = $('#preview_img_new').attr('data-old_file');\r\n\t\t\t\t\tvar folder = $('#preview_img_new').attr('data-file_folder');\r\n\t\t\t\t\tthis.delete_old_file(filename, folder);\r\n\t\t\t\t} else if($('#preview_img_newRE').attr('data-old_file')) {\r\n\t\t\t\t\tvar filename = $('#preview_img_newRE').attr('data-old_file');\r\n\t\t\t\t\tvar folder = $('#preview_img_newRE').attr('data-file_folder');\r\n\t\t\t\t\tthis.delete_old_file(filename, folder);\r\n\t\t\t\t} else if(('#preview_img_new_safari').attr('data-old_file')) {\r\n\t\t\t\t\tvar filename = $('#preview_img_new_safari').attr('data-old_file');\r\n\t\t\t\t\tvar folder = $('#preview_img_new_safari').attr('data-file_folder');\r\n\t\t\t\t\tthis.delete_old_file(filename, folder);\r\n\t\t\t\t}\r\n\t    },\r\n\r\n\t    delete_old_file : function(filename, folder) {\r\n\t\t\t\t$.ajax({\r\n\t        url: GlobalConstant.FileUploadUrl + \"/delete_recorded_video\",\r\n\t        method: 'post',\r\n\t        data: {\r\n\t          filename: filename,\r\n\t          file_folder: folder\r\n\t        },\r\n\t        success: function(data) {\r\n\t          // reset target attributes\r\n\t\t\t\t\t\t$('#preview').attr('data-old_file', \"\");\r\n\t\t\t\t\t\t$('#preview').attr('data-file_folder', \"\");\r\n\t\t\t\t\t\t$('#preview_img_new').attr('data-old_file', \"\");\r\n\t\t\t\t\t\t$('#preview_img_new').attr('data-file_folder', \"\");\r\n\t\t\t\t\t\t$('#resume_save').attr('data-folder','');\r\n\t\t\t\t\t\t$('#resume_save').attr('data-filename','');\r\n\t\t\t\t\t\t$('#image_save').attr('data-folder','');\r\n\t\t\t\t\t\t$('#image_save').attr('data-filename','');\r\n\t\t\t\t\t\t$('#portfolio_save').attr('data-folder','');\r\n\t\t\t\t\t\t$('#portfolio_save').attr('data-filename','');\r\n\t        }\r\n      \t});\r\n\t    },\r\n\r\n\t    PostBlob : function($scope, audioBlob, videoBlob, fileName) {\r\n\t    \tif(!videoBlob) {\r\n\t    \t\talert('Failed saving blob data. Please check video/audio settings browser');\r\n\t    \t\tthis.changeVideo($scope)\r\n\t    \t\t$scope.modal_percent = true;\r\n\t    \t\treturn false\r\n\t    \t}\r\n\r\n\t      var formData = new FormData();\r\n\t      formData.append('filename', fileName);\r\n\t      formData.append('audio-blob', audioBlob);\r\n\t      formData.append('video-blob', videoBlob);\r\n\t      var params = \"?ob_key=\" + $cookies.get('obkey') +\r\n\t        \"&doc_type=icebreaker_video\" +\r\n\t        \"&token_id=\" + $cookies.get('token_id') +\r\n\t        \"&file_folder=camera\";\r\n\r\n\t      if($scope.question_id) {\r\n\t       \tparams += '&question_id='+$scope.question_id;\r\n\t      }\r\n\r\n\t      this.xhrVideo($scope, GlobalConstant.FileUploadUrl + \"/camera_upload_submit\" + params, formData, fileName, videoBlob);\r\n    \t},\r\n\r\n    \txhrVideo : function($scope, url, formData, filename, videoBlob,  callback) {\r\n\t      var request = new XMLHttpRequest();\r\n\t      var uploadStatus = request.upload;\r\n\r\n\t      uploadStatus.addEventListener(\"progress\", function(ev) {\r\n\t        if (ev.lengthComputable) {\r\n\t          $scope.modal_percent_value = Math.ceil((ev.loaded / ev.total) * 100);\r\n\t        }\r\n\t      }, false);\r\n\r\n\t      var that = this;\r\n\t      request.onreadystatechange = function() {\r\n\t        if (request.readyState == 4 && request.status == 200) {\r\n\t          // hide percent progress\r\n\t          //    if(!$('#modal_percent').hasClass('hidden')) {\r\n\t          //  $('#modal_percent').addClass('hidden');\r\n\t          // }\r\n\t          $scope.modal_percent = true;\r\n\t          if($('#pmvCameraModal').data('bs.modal')) {\r\n\t            $('#save').attr('data-recorded', filename);\r\n\t            $('#preview').attr('data-old_file', filename);\r\n\t            $('#preview').attr('data-file_folder', 'camera');\r\n\t          } else if($('#pmvCameraModalNew').data('bs.modal')) {\r\n\t            $('#save_btn').attr('data-recorded', filename);\r\n\t            $('#preview_new').attr('data-old_file', filename);\r\n\t            $('#preview_new').attr('data-file_folder', 'camera');\r\n\t          }\r\n\r\n\t          if (request.responseText == 500) {\r\n\t            alert('Error: Video not upload, please try again');\r\n\t            return false;\r\n\t          }\r\n\r\n\t          that.postBlobCallBack(filename, $scope);\r\n\t        }\r\n\t      };\r\n\r\n\t      request.open('POST', url);\r\n\t      request.send(formData);\r\n    \t},\r\n\r\n    \tpostBlobCallBack : function(filename, $scope) {\r\n\t      var ob_key = $cookies.get('obkey');\r\n\t      var doc_type = 'icebreaker_video';\r\n\t      if($scope.doc_type) {\r\n\t      \tdoc_type = $scope.doc_type;\r\n\t      }\r\n\t      // var filename = $('#record').attr('data-recorded');\r\n\r\n\t      var data = {\r\n      \t \tfilename: filename,\r\n          ob_key: ob_key,\r\n          doc_type: doc_type,\r\n          token_id: $cookies.get('token_id'),\r\n          user_type : $cookies.get('ut')\r\n      \t}\r\n\t       \t// queston -> candiate\r\n\t       \t// crete role -> employer\r\n\t      if($scope.doc_type == 'question' && $scope.question_id || $scope.doc_type == 'create role' && $scope.question_id) {\r\n\t      \tdata.question_id = $scope.question_id;\r\n\t      \tif($scope.last_id) {\r\n\t      \t\tdata.last_id = $scope.last_id;\r\n\t      \t}\r\n\t      }\r\n\r\n\t      // alert($scope.doc_type)\r\n\t      // alert($scope.question_id)\r\n\t      // alert($scope.last_id)\r\n\r\n\t      $.ajax({\r\n\t        url: GlobalConstant.FileUploadUrl + \"/save_uploaded_file\",\r\n\t        'type': 'post',\r\n\t        data: data,\r\n\t        success: function(data) {\r\n\t        \tif($scope.nextStep == 'application_questions') {\r\n\t        \t\talert('Your video is being processed, You can click on continue to finish your application')\r\n\t        \t} else {\r\n\t        \t\talert('Your video is currently being processed. You can keep browsing the website while it is loading.');\r\n\t        \t}\r\n\r\n\t          //if($('#pmvCameraModal').data('bs.modal')) {\r\n\t            $('#save').attr('data-save_type', '')\r\n\t            $('#save').attr('data-recorded', '')\r\n\t            $('#pmvCameraModal').modal('hide');\r\n\r\n\t          // } else if($('#pmvCameraModalNew').data('bs.modal')) {\r\n\t            $('#save_btn').attr('data-save_type', '')\r\n\t            $('#save_btn').attr('data-recorded', '')\r\n\t            $('#pmvCameraModalNew').modal('hide');\r\n\t          // }\r\n\r\n\t\t\t\t\t   // Candate question\r\n\t\t\t\t\t   // \"job/application page\", in APPICATION QUESTIONS STEP,\r\n\t\t\t\t\t\t// put value on this, to pass the validation on continue button\r\n\t          if($scope.doc_type == 'question' && $scope.appQuestion) {\r\n\t           \t$scope.appQuestion.answer[$scope.question_id] = true;\r\n\t           \t$scope.last_id = data;\r\n\r\n\t           \t// Employer crete role\r\n\t          } else if($scope.doc_type == 'create role') {\r\n\t           \t$scope.last_id = data;\r\n\t          }\r\n\t        }\r\n\t      });\r\n\t    },\r\n\r\n\t    startVideoImage : function($scope) {\r\n\t\t\t\tvar preview_img_new = document.getElementById('preview_img_new');\r\n\t\t\t\tif($('#pmvImageModalEmployerRegister').is(':visible')) {\r\n\t    \t\tpreview_img_new = document.getElementById('preview_img_newRE');\r\n\t    \t}\r\n\r\n\t\t\t\tnavigator.getUserMedia = navigator.getUserMedia || navigator.mediaDevices.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n\t      this.sectionsHideShow($scope, true,false);\r\n\t      this.buttonsHideShow($scope, false,true,true,true,true)\r\n\r\n\t      if ($('#preview_img_new').attr('src')) {\r\n\t        $('#preview_img_new').attr('src', '');\r\n\t        window.stream = '';\r\n\t      }\r\n\r\n\t      if ($('#preview_img_newRE').attr('src')) {\r\n\t        $('#preview_img_newRE').attr('src', '');\r\n\t        window.stream = '';\r\n\t      }\r\n\r\n\t      !window.stream && navigator.getUserMedia({\r\n\t        audio: false,\r\n\t        video: true\r\n\t      }, function(stream) {\r\n\t        window.stream = stream;\r\n\t        preview_img_new.src = window.URL.createObjectURL(stream);\r\n\t        preview_img_new.play();\r\n\r\n\t      }, function(error) {\r\n\t        alert(JSON.stringify(error, null, '\\t'));\r\n\t      });\r\n\t    },\r\n\r\n\t    take_photo : function($scope) {\r\n\t\t\t\tvar errorCallback = function(e) {\r\n\t\t\t\t};\r\n\r\n        // Not showing vendor prefixes.\r\n       \tnavigator.getUserMedia = navigator.getUserMedia || navigator.mediaDevices.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n\t      var video = document.querySelector('#preview_img_new');\r\n\t      var canvas = document.querySelector('#my_canvas');\r\n\t      var previewElm = $('#preview_img_new');\r\n\t      if($('#pmvImageModalEmployerRegister').is(':visible')) {\r\n    \t\t \tvideo = document.querySelector('#preview_img_newRE');\r\n\t      \tcanvas = document.querySelector('#my_canvasRE');\r\n\t      \tpreviewElm = $('#preview_img_newRE');\r\n\t    \t}\r\n\r\n\t      var ctx = canvas.getContext('2d');\r\n\t      var localMediaStream = null;\r\n\t      canvas.width = 320;\r\n\t      canvas.height = 240;\r\n\t      var snapshot = function() {\r\n\t\t\t\t\tctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\t\t\t\t\t// \"image/png\" works in Chrome.\r\n\t\t\t\t\t// $('#image_preview').attr('src', canvas.toDataURL('image/png'));\r\n\t\t\t\t\tpreviewElm.attr('src', \"\");\r\n\t\t\t\t\tpreviewElm.attr('poster', canvas.toDataURL('image/png'));\r\n\t        // $scope.base64Image = canvas.toDataURL('image/png');\r\n\t\t\t\t\t$scope.record_btn = true;\r\n\t\t\t\t\t$scope.record_again_btn = false;\r\n\t\t\t\t\t$scope.save_btn = false;\r\n\t\t\t\t\t// Employer register\r\n\t\t\t\t\t$scope.record_btnRE = true;\r\n\t\t\t\t\t$scope.record_again_btnRE = false;\r\n\t\t\t\t\t$scope.save_btnRE = false;\r\n\r\n\t\t\t\t\tif (window.stream) {\r\n\t\t\t\t\t\t//console.dir(stream)\r\n\t\t\t\t\t\t// stream.stop();\r\n\t\t\t\t\t\tstream.getVideoTracks()[0].stop()\r\n\t\t\t\t\t\twindow.stream = \"\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar selectAreaToCrop = function(c) {\r\n\t    \t \t\t// //console.log(c);\r\n\t\t  \t\t\t$scope.crop_data = c;\r\n\t\t  \t\t}\r\n\r\n\t\t\t  \t//Jcrop fix alignment\r\n\t        if(!$('#preview_img_new_holder').find('.jcrop-holder').length) {\r\n\t          $('#preview_img_new_holder').addClass('jcrop_adjust_margin');\r\n\t        }\r\n\t         //Jcrop fix alignment\r\n\t        if(!$('#preview_img_new_holderRE').find('.jcrop-holder').length) {\r\n\t          $('#preview_img_new_holderRE').addClass('jcrop_adjust_margin');\r\n\t        }\r\n\r\n\t\t\t\t\t$('#preview_img_new').Jcrop({\r\n\t\t\t\t    aspectRatio : 1/1,\r\n\t\t\t\t    setSelected : [20,20,250,220],\r\n\t\t\t\t    onChange : selectAreaToCrop,\r\n\t\t\t\t    minSize : [150,150]\r\n\t\t  \t\t});\r\n\t\t  \t\t$('#preview_img_new').css('border', '1px solid #ccc');\r\n\r\n\t\t  \t\t$('#preview_img_newRE').Jcrop({\r\n\t\t\t\t    aspectRatio : 1/1,\r\n\t\t\t\t    setSelected : [20,20,250,220],\r\n\t\t\t\t    onChange : selectAreaToCrop,\r\n\t\t\t\t    minSize : [150,150]\r\n\t\t  \t\t});\r\n\t\t  \t\t$('#preview_img_newRE').css('border', '1px solid #ccc');\r\n\t\t    }\r\n\r\n      \tsnapshot();\r\n\t    },\r\n\r\n\t    save_photo : function($scope) {\r\n\t    \tvar uploadfile_type = '';\r\n\t    \t// console.log('save photo: ', $scope.crop_data);\r\n\t    \t// return false;\r\n\t\t\t\tvar imgArr = ['jpg','png','gif'];\r\n\t      if($('#preview_img_new').attr('poster')) {\r\n\t        var filename_path = $('#preview_img_new').attr('poster');\r\n\t        // console.log(\"photo file name path: \", filename_path);\r\n\t        var ext = filename_path.split('.').pop();\r\n          ext = ext.toLowerCase();\r\n\t        var filename = filename_path.split('/').pop();\r\n\t        // console.log(\"photo file name: \", filename_path);\r\n\t        // Image File upload\r\n\t        if(imgArr.indexOf(ext) != -1) {\r\n\r\n\t        $.ajax({\r\n\t          type: \"POST\",\r\n\t          url: GlobalConstant.FileUploadUrl + '/crop_and_upload_to_cloud',\r\n\t          dataType: 'json',\r\n\t          data: {\r\n\t            filename : filename,\r\n\t            obkey : $cookies.get('obkey'),\r\n\t            folder : 'image',\r\n\t            cropdata : $scope.crop_data,\r\n\t            url_type : $scope.url_type\r\n\t          },\r\n\t          beforeSend : function() {\r\n\t            $('#pmvImageModalNew').modal('hide');\r\n\t            $('#pmvImageModalMsg').find('.modal-body').text('Profile image saved. Please wait a few moment to update.')\r\n\t            .end().modal('show');\r\n\t          },\r\n\t          success : function(data) {\r\n\t          \tconsole.log('success: ',data);\r\n\t            if(data) {\r\n\t            \t// console.log(\"profile photo uploaded: \", data, $scope.url_type);\r\n\t              if(data.response == 200) {\r\n\t\t              if($scope.url_type == 'logo_url') {\r\n\t\t               \t// for company image\r\n\t\t              \t$scope.logo_url = data.url;\r\n\t\t              \t// remove the add button on the company logo image\r\n\t\t              \tif($('.company_logo .add_photo_button').length) {\r\n\t\t              \t \t$('.company_logo .add_photo_button').remove();\r\n\t\t              \t}\r\n\t\t              } else {\r\n\t\t              \t// for profile image url\r\n\t\t              \tconsole.log(\"profile photo manifest\");\r\n\t              \t \t$scope.profile_image = data.url;\r\n\t              \t \t$scope.profile_picture_url = data.url; // employer settings\r\n            \t  \t \t$('#top_profile_image img').attr('src', data.url);\r\n            \t  \t \t$('#employer_setting_page img').attr('src', data.url);\r\n\t              \t\t$scope.profile_photo_uploaded = data;\r\n\t              \t}\r\n\t              }\r\n\t            }\r\n\t          }\r\n\t        });\r\n\r\n\t         // Image taken from user's web camera\r\n\t\t      } else {\r\n\t          $.ajax({\r\n\t\t          type: \"POST\",\r\n\t\t          url: GlobalConstant.FileUploadUrl + '/take_photo_submit?ob_key=' + $cookies.get('obkey'),\r\n\t\t          dataType: 'text',\r\n\t\t          data: {\r\n\t\t            base64data : $('#preview_img_new').attr('poster'),\r\n\t\t            cropdata : $scope.crop_data,\r\n\t\t            url_type : $scope.url_type\r\n\t\t          },\r\n\t\t          beforeSend : function() {\r\n\t\t            $('#pmvImageModalNew').modal('hide');\r\n\t\t            $('#pmvImageModalMsg').find('.modal-body').text('Profile image saved. Please wait a few moment to update.')\r\n\t\t            .end().modal('show');\r\n\t\t          },\r\n\t\t          success : function(data) {\r\n\t\t            if(data) {\r\n\t\t              var data = JSON.parse(data);\r\n\t\t              if(data.response == 200) {\r\n\t\t              \tif($scope.url_type == 'logo_url') {\r\n\t\t               \t\t// for company image\r\n\t\t              \t  $scope.logo_url = data.url;\r\n\t\t              \t  // remove the add button on the company logo image\r\n\t\t              \t  if($('.company_logo .add_photo_button').length) {\r\n\t\t              \t \t  $('.company_logo .add_photo_button').remove();\r\n\t\t              \t  }\r\n\t\t              \t} else {\r\n\t\t              \t\t// for profile image url\r\n\t              \t \t\t$scope.profile_image = data.url;\r\n\t              \t  \t$('#top_profile_image img').attr('src', data.url);\r\n\t              \t  \t$('#employer_setting_page img').attr('src', data.url);\r\n\t\t              \t}\r\n\t\t              }\r\n\t\t            }\r\n\t\t          }\r\n\t\t        });\r\n\t        }\r\n\t      }\r\n\t    },\r\n\t    // Employer Register\r\n\t    save_photoRE : function($scope) {\r\n\t\t\t\tvar imgArr = ['jpg','png','gif'];\r\n\t      if($('#preview_img_newRE').attr('poster')) {\r\n\t        var filename_path = $('#preview_img_newRE').attr('poster');\r\n\t        var ext = filename_path.split('.').pop();\r\n\t        ext = ext.toLowerCase();\r\n\t        var filename = filename_path.split('/').pop();\r\n\r\n\t        // Image File upload\r\n\t        if(imgArr.indexOf(ext) != -1) {\r\n\t\t        $.ajax({\r\n\t\t          type: \"POST\",\r\n\t\t          url: GlobalConstant.FileUploadUrl + '/upload_to_cloud_register_employer',\r\n\t\t          dataType: 'json',\r\n\t\t          data: {\r\n\t\t            filename : filename,\r\n\t\t            obkey : $cookies.get('obkey'),\r\n\t\t            folder : 'image',\r\n\t\t            cropdata : $scope.crop_data\r\n\t\t          },\r\n\t\t          async : false,\r\n\t\t          beforeSend : function() {\r\n\t\t            $('#pmvImageModalEmployerRegister').modal('hide');\r\n\t\t            $('#pmvImageModalMsg').find('.modal-body').text('Profile image saved. Please wait a few moment to update.')\r\n\t\t            .end().modal('show');\r\n\t\t          },\r\n\t\t          success : function(data) {\r\n\t\t          \t//console.log(data);\r\n\t\t            if(data) {\r\n\t\t             //console.log(data);\r\n\t\t              if(data.response == 200) {\r\n\t\t              \t$scope.register_image = data.url;\r\n\t\t              }\r\n\t\t            }\r\n\t\t          }\r\n\t\t        });\r\n\t         // Image taken from user's web camera\r\n\t        } else {\r\n\t          $.ajax({\r\n\t\t          type: \"POST\",\r\n\t\t          url: GlobalConstant.FileUploadUrl + '/take_photo_submit_register_employer?ob_key=' + $cookies.get('obkey'),\r\n\t\t          dataType: 'text',\r\n\t\t          data: {\r\n\t\t            base64data : $('#preview_img_newRE').attr('poster'),\r\n\t\t            cropdata : $scope.crop_data,\r\n\t\t            is_crop : true\r\n\t\t          },\r\n\t\t          async : false,\r\n\t\t          beforeSend : function() {\r\n\t\t            $('#pmvImageModalEmployerRegister').modal('hide');\r\n\t\t            $('#pmvImageModalMsg').find('.modal-body').text('Profile image saved. Please wait a few moment to update.')\r\n\t\t            .end().modal('show');\r\n\t\t          },\r\n\t\t          success : function(data) {\r\n\t\t            if(data) {\r\n\t\t              var data = JSON.parse(data);\r\n\t\t              //console.log(data);\r\n\t\t              if(data.response == 200) {\r\n\t\t             \t\t$scope.register_image = data.url;\r\n\t\t              }\r\n\t\t            }\r\n\t\t          }\r\n\t        \t});\r\n\t        }\r\n\t      }\r\n\t    },\r\n\r\n\t    mobile_image_upload_register : function($scope) {\r\n\t\t\t\tvar file_img = $('#'+ $scope.mobile_file_id)[0];\r\n\t\t\t\tvar file = file_img.files[0];\r\n\t\t\t\tvar formData = new FormData();\r\n\t\t\t\tformData.append('file',file);\r\n\r\n        if(file.type != 'image/png' && file.type != 'image/jpg' && file.type != 'image/gif' && file.type != 'image/jpeg') {\r\n          alert('Invalid file must be .png, .jpg, .gif extension');\r\n          return false;\r\n        }\r\n\r\n\t\t\t\t// $scope.mobile_agent_name = 'ios';\r\n\t\t\t\t// $scope.mobile_agent = true;\r\n\t      var params = '?ob_key=' + $cookies.get('obkey');\r\n        params += '&file_folder=image';\r\n        params += '&is_mobile=' + $scope.mobile_agent_name;\r\n        params += '&employer_register=1';\r\n\r\n        if($scope.mobile_agent) {\r\n          $.ajax({\r\n            type: \"POST\",\r\n            url: GlobalConstant.FileUploadUrl + '/upload_submit_mobile' + params,\r\n            dataType: 'json',\r\n            data: formData,\r\n            processData: false,  // tell jQuery not to process the data\r\n            contentType: false,  // tell jQuery not to set contentType\r\n           \tasync : false,\r\n          \tbeforeSend : function() {\r\n             \t$('#pmvImageModalMsg').find('.modal-body').text('Image saved. Please wait a few moment to update.')\r\n\t            .end().modal('show');\r\n          \t},\r\n\t          success : function(data) {\r\n\t            //console.log(data);\r\n\t            if(data) {\r\n\t              if(data.response == 200) {\r\n\t                $scope.register_image = data.url;\r\n\t              }\r\n\t            }\r\n\t          }\r\n        \t});\r\n        }\r\n\t    },\r\n\r\n      saveBanner : function($scope) {\r\n\t\t\t\tvar imgArr = ['jpg','png','gif'];\r\n        var filename_path = $('#banner_img').attr('src');\r\n        var ext = filename_path.split('.').pop();\r\n        ext = ext.toLowerCase();\r\n        var filename = filename_path.split('/').pop();\r\n\r\n        // Image File upload\r\n        if(imgArr.indexOf(ext) != -1) {\r\n\t        $.ajax({\r\n\t          type: \"POST\",\r\n\t          url: GlobalConstant.FileUploadUrl + '/upload_to_cloud',\r\n\t          dataType: 'json',\r\n\t          data: {\r\n\t            filename : filename,\r\n\t            obkey : $cookies.get('obkey'),\r\n\t            folder : 'image',\r\n\t            url_type : $scope.url_type\r\n\t          },\r\n\t          beforeSend : function() {\r\n\t            $('#companyBannerModal').modal('hide');\r\n\t            $('#pmvImageModalMsg').find('.modal-body').text('Banner image saved. Please wait a few moment to update.')\r\n\t            .end().modal('show');\r\n\t          },\r\n\t          success : function(data) {\r\n\t          \tconsole.log('emp banner success: ',data);\r\n\r\n\t            if(data) {\r\n\t              if(data.response == 200) {\r\n\t                if($scope.url_type == 'company_banner_url') {\r\n\t               \t\t// for company banner\r\n\t              \t  $scope.company_banner_url = data.url;\r\n\t              \t  // var bannerdata = {data : data.url};\r\n\r\n\t              \t  // ajaxService.postEmployerImageUpload(bannerdata, 'change-banner-url').then(function(res){\r\n\t              \t  // \tconsole.log(\"uploaded banner \", res)\r\n\t              \t  // });\r\n\r\n\t              \t  // $('#company_banner_holder .add_photo_button').remove();\r\n\t              \t}\r\n\t              }\r\n\t            }\r\n\t          }\r\n\t        });\r\n        }\r\n\t    },\r\n\r\n\t    new_image_upload_modal : function($scope, evt) {\r\n\t    \t// console.log(\"profile photo uploading: \", $scope);\r\n\t\t\t\tvar fileField = document.getElementById(\"image_upload_modal_new\");\r\n\r\n\t\t\t\tif($('#pmvImageModalEmployerRegister').is(':visible')) {\r\n\t\t\t\t\tfileField = document.getElementById(\"image_upload_modal_newRE\");\r\n\t\t\t\t}\r\n\t      var file_data = fileField.files[0];\r\n\r\n\t      // console.log(\"upload image: \", file_data);\r\n\t      // drag drop\r\n\t      if (evt) {\r\n\t        file_data = evt.dataTransfer.files[0];\r\n\t      }\r\n\r\n\t      // delete old file if exists\r\n\t      if($('#image_save').attr('data-filename')) {\r\n\t        var filename = $('#image_save').attr('data-filename');\r\n\t        var folder = $('#image_save').attr('data-folder');\r\n\t        $scope.delete_old_file(filename,folder);\r\n\t      }\r\n\r\n\r\n\t      var allowed_files = ['png', 'jpg', 'gif'];\r\n\t      var filename = file_data.name;\r\n\t      var last_dot = filename.lastIndexOf('.');\r\n\t      var file_folder = 'image';\r\n\t      var ext = filename.substr(last_dot + 1).toLowerCase();\r\n\t      if (allowed_files.indexOf(ext) == -1) {\r\n\t        alert('Invalid file must be .png, jpg. .gif extension');\r\n\t        return false;\r\n\t      }\r\n\t      var ob_key = $cookies.get('obkey');\r\n\t      var form_data = new FormData();\r\n\t      form_data.append('file', file_data);\r\n\t      var params = '?ob_key=' + ob_key;\r\n\t      params += '&file_folder=' + file_folder;\r\n\t      $scope.modal_file_percent_value = 0;\r\n\t      var that = this;\r\n\r\n\t      $.ajax({\r\n\t        url: GlobalConstant.FileUploadUrl + '/upload_submit' + params,\r\n\t        dataType: 'text',\r\n\t        cache: false,\r\n\t        contentType: false,\r\n\t        processData: false,\r\n\t        data: form_data,\r\n\t        type: 'post',\r\n\t        success: function(res) {\r\n\t          res = JSON.parse(res);\r\n\t          if (res.response == 200) {\r\n\t            fileField.value = '';\r\n\t            // hide percent image\r\n\t            $scope.modal_percent = true;\r\n\t            $scope.modal_percentRE = true;\r\n\t            $('#preview_img_new').attr('poster', 'assets/Uploads/Image/'+res.filename);\r\n\t            $('#preview_img_new').attr('data-old_file', res.filename);\r\n\t            $('#preview_img_new').attr('data-file_folder', 'image');\r\n\t            $scope.imagefilename = res.filename;\r\n\r\n\t            if($scope.isSafari) {\r\n\t\t            var selectAreaToCrop = function(c) {\r\n\t            \t \t//console.log(c);\r\n\t\t\t\t\t  \t\t\t$scope.crop_data = c;\r\n\t\t\t\t\t  \t\t}\r\n\t\t\t\t\t\t\t\t$('#preview_img_new_safari').attr('src', 'assets/Uploads/Image/'+res.filename);\r\n\t\t            $('#preview_img_new_safari').attr('data-old_file', res.filename);\r\n\t\t            $('#preview_img_new_safari').attr('data-file_folder', 'image');\r\n\r\n            \t\t$('#preview_img_new_safari').Jcrop({\r\n\t\t\t\t\t\t      aspectRatio : 1/1,\r\n\t\t\t\t\t\t      setSelected : [20,20,250,220],\r\n\t\t\t\t\t\t      onChange : selectAreaToCrop,\r\n\t\t\t\t\t\t      // onSelect : that.selectAreaToCrop,\r\n\t\t\t\t\t\t      minSize : [150,150]\r\n\t\t\t\t  \t\t\t});\r\n\t\t\t\t\t  \t\t$('#preview_img_new_safari').css('border', '1px solid #ccc');\r\n\t\t\t\t\t  \t\t$('.jcrop-holder').find('img').attr('src', 'assets/Uploads/Image/'+res.filename);\r\n\r\n\t\t\t\t\t\t  \t// Register Employer page\r\n\t\t\t\t\t  \t  $('#preview_img_newRE_safari').attr('poster', 'assets/Uploads/Image/'+res.filename);\r\n\t\t            $('#preview_img_newRE_safari').attr('data-old_file', res.filename);\r\n\t\t            $('#preview_img_newRE_safari').attr('data-file_folder', 'image');\r\n             \t \t$('#preview_img_newRE_safari').Jcrop({\r\n\t\t\t\t\t\t\t    aspectRatio : 1/1,\r\n\t\t\t\t\t\t\t    setSelected : [20,20,250,220],\r\n\t\t\t\t\t\t\t    onChange : selectAreaToCrop,\r\n\t\t\t\t\t\t\t     // onSelect : that.selectAreaToCrop,\r\n\t\t\t\t\t\t\t    minSize : [150,150]\r\n\t\t\t\t  \t\t\t});\r\n\t\t\t\t\t  \t\t$('#preview_img_newRE_safari').css('border', '1px solid #ccc');\r\n\t\t\t\t\t  \t\t$('#pmvImageModalEmployerRegister .jcrop-holder').find('img').attr('src', 'assets/Uploads/Image/'+res.filename);\r\n\t            }\r\n\r\n\t            $('#preview_img_newRE').attr('poster', 'assets/Uploads/Image/'+res.filename);\r\n\t            $('#preview_img_newRE').attr('data-old_file', res.filename);\r\n\t            $('#preview_img_newRE').attr('data-file_folder', 'image');\r\n\r\n\t            that.sectionsHideShow($scope,true,false);\r\n\t            that.buttonsHideShow($scope, true,true,true,false,false);\r\n\t            that.hideShowManual($scope, '#stop_btn', true);\r\n\t          }\r\n\t        },\r\n\t        beforeSend: function() {\r\n\t          $scope.modal_percent_value = 0;\r\n\t          // show percent image\r\n\t          $scope.modal_percent = false;\r\n\t        },\r\n\t        xhr: function() {\r\n\t          var xhr = new window.XMLHttpRequest();\r\n\t          xhr.upload.addEventListener(\"progress\", function(evt) {\r\n\t            if (evt.lengthComputable) {\r\n\t              $scope.modal_percent_value = Math.ceil((evt.loaded / evt.total) * 100);\r\n\t            }\r\n\t          }, false);\r\n\r\n            xhr.addEventListener('readystatechange', function(e) {\r\n            \tif(this.readyState === 4) {\r\n            \t \tvar selectAreaToCrop = function(c) {\r\n\t            \t \t//console.log(c);\r\n\t\t\t\t\t  \t\t\t$scope.crop_data = c;\r\n\t\t\t\t\t  \t\t}\r\n\r\n\t\t\t\t\t  \t\t//Jcrop fix alignment\r\n\t\t\t\t        if(!$('#preview_img_new_holder').find('.jcrop-holder').length) {\r\n\t\t\t        \t\t$('#preview_img_new_holder').addClass('jcrop_adjust_margin');\r\n\t\t\t\t        }\r\n\t\t\t\t         //Jcrop fix alignment (register employer)\r\n\t\t\t\t        if(!$('#preview_img_new_holderRE').find('.jcrop-holder').length) {\r\n\t\t\t\t        \t$('#preview_img_new_holderRE').addClass('jcrop_adjust_margin');\r\n\t\t\t\t        }\r\n\r\n\t\t\t        \tif($scope.isSafari == false) {\r\n\t\t\t        \t\t$('#preview_img_new').Jcrop({\r\n\t\t\t\t\t\t\t      aspectRatio : 1/1,\r\n\t\t\t\t\t\t\t      setSelected : [20,20,250,220],\r\n\t\t\t\t\t\t\t      onChange : selectAreaToCrop,\r\n\t\t\t\t\t\t\t      // onSelect : that.selectAreaToCrop,\r\n\t\t\t\t\t\t\t      minSize : [150,150]\r\n\t\t\t\t\t\t  \t\t});\r\n\t\t\t\t\t\t  \t\t$('#preview_img_new').css('border', '1px solid #ccc');\r\n\t\t\t\t\t\t  \t\t// Employer register page\r\n\t\t\t\t\t\t  \t\t$('#preview_img_newRE').Jcrop({\r\n\t\t\t\t\t\t\t      aspectRatio : 1/1,\r\n\t\t\t\t\t\t\t      setSelected : [20,20,250,220],\r\n\t\t\t\t\t\t\t      onChange : selectAreaToCrop,\r\n\t\t\t\t\t\t\t      // onSelect : that.selectAreaToCrop,\r\n\t\t\t\t\t\t\t      minSize : [150,150]\r\n\t\t\t\t\t\t  \t\t});\r\n\t\t\t\t  \t\t\t\t$('#preview_img_newRE').css('border', '1px solid #ccc');\r\n\t\t\t\t        }\r\n\t            }\r\n            });\r\n\t          return xhr;\r\n\t        },\r\n\t      });\r\n\r\n\t\t\t\tvar uploading_userType = $cookies.get('ut');\r\n\r\n\t\t\t\tif (uploading_userType != 'employer') {\r\n\t\t\t\t\tajaxService.postImageUpload(file_data).then(function(res){\r\n\t\t\t\t\t\t// console.log('popo ', res);\r\n\t\t\t\t\t\t$('.head__profile-link img').attr('src', res.doc_url);\r\n\t  \t  \t \t$('#employer_setting_page img').attr('src', res.doc_url);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t    },\r\n\r\n     \tbanner_image_upload : function($scope, evt) {\r\n\t\t\t\tvar fileField = document.getElementById($scope.file_input_id);\r\n\t      var file_data = fileField.files[0];\r\n\t      // drag drop\r\n\t      if (evt) {\r\n\t        file_data = evt.dataTransfer.files[0];\r\n\t      }\r\n\r\n\t      // delete old file if exists\r\n\t      if($('#image_save').attr('data-filename')) {\r\n\t        $scope.delete_old_file($scope.old_file,$scope.folder);\r\n\t      }\r\n\r\n\t      var allowed_files = ['png', 'jpg', 'gif'];\r\n\t      var filename = file_data.name;\r\n\t      var last_dot = filename.lastIndexOf('.');\r\n\t      var file_folder = 'image';\r\n\t      var ext = filename.substr(last_dot + 1).toLowerCase();\r\n\t      if (allowed_files.indexOf(ext) == -1) {\r\n\t        alert('Invalid file must be .png, jpg. .gif extension');\r\n\t        return false;\r\n\t      }\r\n\t      var ob_key = $cookies.get('obkey');\r\n\t      var form_data = new FormData();\r\n\t      form_data.append('file', file_data);\r\n\t      var params = '?ob_key=' + ob_key;\r\n      \tparams += '&file_folder=' + file_folder;\r\n      \tparams += '&no_crop=1';\r\n\t      $scope.modal_file_percent_value = 0;\r\n\t      var that = this;\r\n\r\n\t      $.ajax({\r\n\t        url: GlobalConstant.FileUploadUrl + '/upload_submit' + params,\r\n\t        dataType: 'text',\r\n\t        cache: false,\r\n\t        contentType: false,\r\n\t        processData: false,\r\n\t        data: form_data,\r\n\t        type: 'post',\r\n\t        success: function(res) {\r\n\t          res = JSON.parse(res);\r\n\t          if (res.response == 200) {\r\n\t            fileField.value = '';\r\n\t            // hide percent image\r\n\t            $scope.modal_percent = true;\r\n\t            $scope.modal_percentRE = true;\r\n\t            $scope.old_file = res.filename;\r\n\t            $scope.folder = 'image';\r\n\r\n\t            if(res.w > res.h) {\r\n\t            \t$('#banner_img').attr('width', '80%');\r\n\t            \t$('#banner_img').attr('height', '');\r\n\t            } else {\r\n\t            \t$('#banner_img').attr('width', '');\r\n\t            \t$('#banner_img').attr('height', 240);\r\n\t            }\r\n\r\n\t            $('#banner_img').attr('src', 'assets/Uploads/Image/'+res.filename)\r\n\t            that.sectionsHideShow($scope,true,false);\r\n\t            that.buttonsHideShow($scope, true,true,true,false,false);\r\n\t            that.hideShowManual($scope, '#stop_btn', true);\r\n\t            //console.log(res);\r\n\t          }\r\n\t        },\r\n\t        beforeSend: function() {\r\n\t          $scope.modal_percent_value = 0;\r\n\t          // show percent image\r\n\t          $scope.modal_percent = false;\r\n\t        },\r\n\t        xhr: function() {\r\n\t          var xhr = new window.XMLHttpRequest();\r\n\t          xhr.upload.addEventListener(\"progress\", function(evt) {\r\n\t            if (evt.lengthComputable) {\r\n\t              $scope.modal_percent_value = Math.ceil((evt.loaded / evt.total) * 100);\r\n\t            }\r\n\t          }, false);\r\n\r\n            xhr.addEventListener('readystatechange', function(e) {\r\n            \tif(this.readyState === 4) {\r\n            \t}\r\n            });\r\n\r\n\t          return xhr;\r\n\t        },\r\n\t      });\r\n\t    }\r\n\t\t} // end return\r\n\t}]);\r\n\r\n\r\n\r\n\r\n\tapp.factory('ajaxService', ['GlobalConstant','$cookies', '$http', function(GlobalConstant, $cookies, $http) {\r\n\t\tvar params = {access_token: $cookies.get('token')};\r\n\t\treturn {\r\n\t\t\tgetEmployerProfile : function() {\r\n\t\t\t\t// return $http.get(GlobalConstant.APIRoot+'employer/profile'); // Uncomment for live API call\r\n\t\t\t\treturn $http.get(window.location.origin + '/js/minified/test-data/test_employer_setting_data.json');\r\n\t\t\t},\r\n\t\t\tpostCandidateDoc : function(data) {\r\n\t\t\t\treturn $http.post(GlobalConstant.APIRoot+'candidate/doc', data).then(function(response){\r\n\t\t\t\t\treturn response.data.data;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tpostImageUpload : function(data) {\r\n        var form = new FormData();\r\n        form.append(\"document\", data);\r\n\r\n        return $http.post(\r\n          GlobalConstant.APIRoot + \"candidate/upload/profile_image\",\r\n          form,\r\n          {\r\n            transformRequest: angular.identity,\r\n            headers: {'Content-Type': undefined}\r\n          }\r\n        ).then(function(response) {\r\n          return  response.data.data;\r\n        });\r\n      },\r\n\t\t\tpostUpload : function(data, type, app_id, question_id, uagent) {\r\n        var form = new FormData();\r\n        form.append(\"document\", data);\r\n        form.append(\"job_application_object_id\", app_id);\r\n        form.append(\"question_id\", question_id);\r\n        form.append(\"user_agent_logs\", uagent);\r\n\r\n        console.log(\"holy before postUpload: \", form);\r\n        return $http.post(\r\n          GlobalConstant.APIRoot + \"candidate/upload/\" + type,\r\n          form,\r\n          {\r\n            transformRequest: angular.identity,\r\n            headers: {'Content-Type': undefined}\r\n          }\r\n        ).then(function(response) {\r\n          return  response.data;\r\n        }, function(error) {\r\n        \treturn error.data;\r\n        });\r\n      },\r\n      postEmployerImageUpload : function(data, type) {\r\n\t\t\t\tconsole.log('posting: ', type, data);\r\n        return $http.put(GlobalConstant.APIRoot + \"employer/company/\" + type, data).then(function(response) {\r\n        \tconsole.log(\"emp img post result \", response);\r\n          return  response.data.data;\r\n        });\r\n      }\r\n\t\t}\r\n\t}]);\r\n})();"]}