options:
  max-time: 15

pipelines:
  branches:
    staging:
      - step:
          name: Install composer dependencies
          image: php:7.1.3
          artifacts:
            - vendor/**
            - bootstrap/**
            - composer.lock
          caches:
            - composer
          script:
            - apt-get update && apt-get install -y unzip libfreetype6-dev libjpeg62-turbo-dev libpng12-dev
            - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
            - docker-php-ext-install -j$(nproc) gd
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-progress --no-suggest
      - step:
          name: Compile front-end source
          image: node:8
          artifacts:
            - artifact.zip
          script:
            - apt-get update
            - apt-get install -y zip
            - npm install -D --no-package-lock
            - npm run dev
            - zip -r artifact.zip .
      - step:
          name: Deploy to staging
          image: python:3.5.1
          deployment: staging
          trigger: manual
          script:
            - apt-get update
            - pip install boto3==1.3.0
            - python bitbucket/beanstalk_deploy.py $AWS_EB_STAGING_ENVIRONMENT
  tags:
    release-*:
      - step:
          name: Install composer dependencies
          image: php:7.1.3
          artifacts:
            - vendor/**
            - bootstrap/**
            - composer.lock
          caches:
            - composer
          script:
            - apt-get update && apt-get install -y unzip libfreetype6-dev libjpeg62-turbo-dev libpng12-dev
            - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
            - docker-php-ext-install -j$(nproc) gd
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-progress --no-suggest
      - step:
          name: Compile front-end source
          image: node:8
          artifacts:
            - artifact.zip
          script:
            - apt-get update
            - apt-get install -y zip
            - npm install -D --no-package-lock
            - npm run production
            - zip -r artifact.zip .
      - step:
          name: Deploy to production
          image: python:3.5.1
          deployment: production
          trigger: manual
          script:
            - apt-get update
            - pip install boto3==1.3.0
            - python bitbucket/beanstalk_deploy.py $AWS_EB_PRODUCTION_ENVIRONMENT
